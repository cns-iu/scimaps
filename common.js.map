{"version":3,"sources":["./src/app/shared/components/video-tile/video-tile.module.ts","./src/app/shared/services/map-macroscope-resolver.service.ts","./src/app/pipes/safe.pipe.ts","./src/app/pages/maker-videos/maker-videos-resolver.service.ts","./src/app/pages/macroscopes/macroscopes-resolver.service.ts","./src/app/shared/components/video-tile/video-tile.component.ts","./src/app/shared/components/video-tile/video-tile.component.html"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { VideoTileComponent } from './video-tile.component';\n\n\n\n@NgModule({\n  declarations: [VideoTileComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [VideoTileComponent]\n})\nexport class VideoTileModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Params, Resolve } from '@angular/router';\nimport { combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, take } from 'rxjs/operators';\n\nimport { MapMacroscopeItem, Language } from '../../core/models/discover-item';\nimport { ContentService } from './content.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MapMacroscopeResolverService implements Resolve<MapMacroscopeItem> {\n  constructor(private content: ContentService) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot\n  ): Observable<MapMacroscopeItem> | Observable<never> {\n    const languages$ = this.content\n      .getContent<Params[]>('site/languages.md')\n      .pipe(take(1));\n    const language = route.queryParamMap.get('lang') || 'en';\n    const type = route.data.type;\n    const iteration = route.paramMap.get('iteration');\n    const sequence = route.paramMap.get('sequence');\n    const mapSlug = `${type}/${iteration}/${sequence}`;\n    const content$ = this.content.getContent<Params>(mapSlug).pipe(take(1));\n\n    // tslint:disable-next-line: no-any\n    const response$ = combineLatest([languages$, content$]).pipe(\n      map((response: [Params, Params]) => {\n        const item: Params = {};\n        const [languages, data] = response;\n        item.title = data[language].title;\n        item.makers = data.en.makers;\n        item.credit = data[language].creditLine;\n        item.description = data[language].body;\n        item.references = data[language].references;\n        item.thumbnail = `assets/content/${type}/${data.en.iteration}/${data.en.sequence}/${data.en.image.lg}`;\n        item.translations = languages.languages.filter((lang: Language) => {\n          return Object.keys(data).includes(lang.abbr_short);\n        });\n        item.externalLink = data.en.externalLink;\n        return item;\n      })\n    );\n\n    const people$ = response$.pipe(\n      map((items) => items.makers),\n      mergeMap((slugs) => {\n        const forkJoins: Observable<Params>[] = slugs.map((slug: string) => {\n          // {'s1': {}}, {'s2': {}}\n          return this.content.getContent<Params>(`person/${slug}`).pipe(\n            take(1),\n            map((result: Params) => {\n              return {\n                [slug]: result,\n              };\n            }),\n            catchError(() => {\n              return of({});\n            })\n          );\n        });\n        // [ {'s1': {}}, {'s2': {}} ]\n        return forkJoin(forkJoins);\n      }),\n      map((array: Params[]) => {\n        const result = {};\n        array.forEach((element) => {\n          Object.assign(result, element);\n        });\n        // {'s1': {}, 's2': {}}\n        return result;\n      })\n    );\n    return combineLatest([response$, people$]).pipe(\n      map((result: Params[]) => {\n        const [response, people] = result;\n        const makers = response.makers\n          .map((slug: string) => {\n            if (people.hasOwnProperty(slug) && people[slug]) {\n              const profile = people[slug];\n              if (profile) {\n                const folder = slug.split('/')[0];\n                profile.image = `assets/content/person/${folder}/${profile.image}`;\n                return profile;\n              }\n            } else {\n              return {\n                name: slug.split('/')[0].replace('-', ' '),\n                body: 'Lorem Ipsum'\n              };\n            }\n          })\n          .filter((profile: Params | undefined) => profile);\n        response.makers = makers;\n        return response as MapMacroscopeItem;\n      })\n    );\n  }\n}\n","import { NgModule, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n  constructor(protected sanitizer: DomSanitizer) {}\n  transform(value: string, type: string): SafeResourceUrl {\n    if (type === 'resourceUrl') {\n      return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n    } else {\n      return '';\n    }\n  }\n}\n\n@NgModule({\n  declarations: [\n    SafePipe\n  ],\n  exports: [\n    SafePipe\n  ]\n})\nexport class SafePipeModule {}\n\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { isHttp } from '../../constants/utils';\nimport { ContentService, toSlug } from '../../shared/services/content.service';\n\nexport interface MakerVideo {\n  title: string;\n  short_description: string;\n  long_description: string;\n  slug: string;\n  videoLink: string;\n  maker: string;\n  image: string;\n}\n\nexport const getMakerVideo = (n: number): MakerVideo[] => {\n  const result: MakerVideo[] = [];\n  for (let i = 0; i < n; i++) {\n    result.push({\n      title: `title${i}`,\n      short_description: `short ${i}`,\n      long_description: `long ${i}`,\n      slug: `slug${i}`,\n      videoLink: `link$ ${i}`,\n      maker: 'maker/readme',\n      image: `image.${i}.jpg`\n    });\n  }\n  return result;\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class MakerVideosResolverService implements Resolve<MakerVideo[]> {\n\n  directory = 'assets/content/maker-videos';\n  constructor(private content: ContentService) { }\n\n  updatePaths(makerVideo: MakerVideo): MakerVideo {\n    if (makerVideo.image && !isHttp(makerVideo.image)) {\n      makerVideo.image = `${this.directory}/${makerVideo.slug}/${makerVideo.image}`;\n    }\n    return makerVideo;\n  }\n  postProcess(makerVideos: MakerVideo[]): MakerVideo[] {\n    return makerVideos.map((makerVideo: MakerVideo) => {\n      makerVideo.slug = toSlug(makerVideo.title);\n      return this.updatePaths(makerVideo);\n    });\n  }\n\n  resolve(): Observable<MakerVideo[]> {\n    return this.content.getIndex<MakerVideo>('maker-videos').pipe(\n      take(1),\n      map((makerVideos: MakerVideo[]) => {\n        return this.postProcess(makerVideos);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { DiscoverItem } from '../../core/models/discover-item';\nimport { ContentService } from '../../shared/services/content.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MacroscopesResolverService implements Resolve<DiscoverItem[]> {\n  result!: Observable<DiscoverItem[]> | Observable<never>;\n  cached = false;\n  constructor(private content: ContentService) { }\n\n  resolve(): Observable<DiscoverItem[]> | Observable<never> {\n    if (!this.cached) {\n      this.result = this.content.getIndex<DiscoverItem>('app-macroscopes').pipe(take(1));\n      this.cached = true;\n    }\n    return this.result;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MakerVideo } from '../../../pages/maker-videos/maker-videos-resolver.service';\n\n@Component({\n  selector: 'sci-video-tile',\n  templateUrl: './video-tile.component.html',\n  styleUrls: ['./video-tile.component.scss']\n})\nexport class VideoTileComponent {\n\n  @Input() video!: MakerVideo;\n\n  constructor(private router: Router) { }\n\n  gotoVideo(): void {\n    if (this.video) {\n      this.router.navigate(['/', 'learning-center', 'maker-videos', this.video.slug]);\n    }\n  }\n}\n","<div>\n  <div class=\"container\" (click)=\"gotoVideo()\">\n    <div class=\"thumbnail\">\n      <img [src]=\"video?.image\" [alt]=\"video?.image\" />\n    </div>\n    <div class=\"title\">\n      {{ video?.short_description }}\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}