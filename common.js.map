{"version":3,"file":"common.js","mappings":"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","sources":["./projects/scimaps/src/app/pages/blogs/blog-resolver.service.ts","./projects/scimaps/src/app/pages/blogs/blogs-resolver.service.ts","./projects/scimaps/src/app/pages/learning-material/learning-material-resolver.service.ts","./projects/scimaps/src/app/pages/learning-material/learning-material-routing.module.ts","./projects/scimaps/src/app/pages/learning-material/learning-material.component.ts","./projects/scimaps/src/app/pages/learning-material/learning-material.component.html","./projects/scimaps/src/app/pages/learning-material/learning-material.module.ts","./projects/scimaps/src/app/pages/macroscopes/macroscopes-resolver.service.ts","./projects/scimaps/src/app/shared/components/blog-tile/blog-tile.component.ts","./projects/scimaps/src/app/shared/components/blog-tile/blog-tile.component.html","./projects/scimaps/src/app/shared/components/blog-tile/blog-tile.module.ts","./projects/scimaps/src/app/shared/services/map-macroscope-resolver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Params,\n  Resolve\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { getSegmentedDate, isHttp } from '../../constants/utils';\nimport { ContentService, toSlug } from '../../shared/services/content.service';\nimport { Blog } from './blogs-resolver.service';\n\nexport const getBlogImageSource = (blog: Blog, directory = ''): { sm: string, lg: string }[] => {\n  const [year, month, date] = getSegmentedDate(blog.date);\n  const slug = toSlug(blog.title);\n  let result: {sm: string, lg: string}[] = [];\n  if (Array.isArray(blog.blogImages) && blog.blogImages.length) {\n    result = blog.blogImages.map((image: { sm: string; lg: string }) => {\n      let sm = image.sm;\n      let lg = image.lg;\n      if (!isHttp(image.sm)) {\n        sm = `${directory}/${year}/${month}-${date}/${slug}/${image.sm}`;\n      }\n      if (!isHttp(image.lg)) {\n        lg = `${directory}/${year}/${month}-${date}/${slug}/${image.lg}`;\n      }\n      return { sm, lg };\n    });\n  }\n  return result;\n};\n\nexport const toBlog = (blogItem: Params, directory = ''): Blog => {\n  const blog: Blog = {\n    publish_date: blogItem.publish_date,\n    title: blogItem.title,\n    date: blogItem.date,\n    published: blogItem.published,\n    body: blogItem.body,\n    blogImages: blogItem.blogImages,\n    slug: toSlug(blogItem.title)\n  };\n  blog.blogImages = getBlogImageSource(blog, directory);\n  return blog;\n};\n@Injectable({\n  providedIn: 'root',\n})\nexport class BlogResolverService implements Resolve<Blog> {\n  constructor(private contentService: ContentService) { }\n\n  mdPath = '';\n  directory = 'assets/content/blog';\n\n  resolve(\n    route: Params\n  ): Blog | Observable<Blog> | Promise<Blog> {\n    const { year, month, slug } = route.params;\n    this.mdPath = `blog/${year}/${month}/${slug}/readme.md`;\n    return this.getResult(this.mdPath);\n  }\n  getResult(mdPath: string): Observable<Blog> {\n    return this.contentService.getContent<Params>(mdPath).pipe(\n      take(1),\n      map((blog: Params) => toBlog(blog, this.directory))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Params, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ContentService } from '../../shared/services/content.service';\nimport { toBlog } from './blog-resolver.service';\n\n\nexport interface Blog {\n  title: string;\n  date: string;\n  body: string;\n  slug: string;\n  published: boolean;\n  publish_date: string;\n  blogImages: { sm: string, lg: string }[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogsResolverService implements Resolve<Blog[]> {\n\n  directory = 'assets/content/blog';\n\n  constructor(private contentService: ContentService) { }\n\n  resolve(route: Params): Observable<Blog[]> | Observable<never> {\n    const {blogsCount} = route.data;\n    return this.contentService.getIndex<Params>('app-blogs').pipe(\n      map((items: Params[]) => {\n        if (blogsCount && blogsCount > 0) {\n          return items.slice(0, blogsCount);\n        } else {\n          return items;\n        }\n      }),\n      map((items: Params[]) => {\n        return items.map((item: Params) => toBlog(item, this.directory));\n      }),\n      map((items: Blog[]) => {\n        return items.filter((item: Blog) => {\n          const today = new Date();\n          const todayUTC = Date.parse(today.toUTCString());\n          const publishedDate = new Date(item.publish_date);\n          publishedDate.setUTCHours(0, 0, 0, 0);\n          const publishDateUTC = Date.parse(publishedDate.toUTCString());\n          return todayUTC > publishDateUTC;\n        });\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Params, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { ContentService, toSlug } from '../../shared/services/content.service';\nimport { LearningMaterial } from '../hosting/learning-materials-resolver.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LearningMaterialResolverService implements Resolve<LearningMaterial> {\n  directory = 'content/learning-materials';\n  mdPath = '';\n  slug = '';\n  constructor(private contentService: ContentService) { }\n\n  resolve(route: ActivatedRouteSnapshot | Params): Observable<LearningMaterial> | Observable<never> {\n    ({ slug: this.slug } = route.params);\n    this.mdPath = `learning-materials/${this.slug}/readme.md`;\n    return this.contentService.getContent<LearningMaterial>(this.mdPath).pipe(\n      take(1),\n      map((lm: LearningMaterial) => {\n        return {\n          ...lm,\n          slug: toSlug(lm.title)\n        };\n      }),\n      map((lm: LearningMaterial) => {\n        return this.updatePaths(lm);\n      })\n    );\n  }\n\n  updatePaths(item: LearningMaterial): LearningMaterial {\n    const {image} = item;\n    if (image) {\n      item.image = this.updateImagePath(image);\n    }\n    return item;\n  }\n\n  // Single Image\n  updateImagePath(image: {sm: string, lg: string}): {sm: string, lg: string} {\n    return {\n      ...image,\n      sm: `assets/${this.directory}/${this.slug}/${image.sm}`,\n      lg: `assets/${this.directory}/${this.slug}/${image.lg}`\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LearningMaterialResolverService } from './learning-material-resolver.service';\nimport { LearningMaterialComponent } from './learning-material.component';\n\nconst routes: Routes = [{\n  path: ':slug',\n  component: LearningMaterialComponent,\n  resolve: {\n    learningMaterial: LearningMaterialResolverService\n  }\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LearningMaterialRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { drawerInOut } from '../../constants/drawer.animations';\nimport { LearningMaterial } from '../hosting/learning-materials-resolver.service';\n\n@Component({\n  selector: 'sci-learning-material',\n  templateUrl: './learning-material.component.html',\n  styleUrls: ['./learning-material.component.scss'],\n  animations: [drawerInOut]\n})\nexport class LearningMaterialComponent implements OnInit {\n\n  item!: LearningMaterial;\n  showDrawer = false;\n  constructor(private router: Router, public route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((response: Params) => {\n      const { learningMaterial } = response;\n      if (learningMaterial) {\n        this.item = learningMaterial;\n      }\n    });\n    this.showDrawer = true;\n  }\n\n  goBack(): void {\n    this.showDrawer = false;\n    setTimeout(() => {\n      this.router.navigate(['/hosting'], {state: {direction: 'backward'}});\n    }, 500);\n  }\n}\n","<sci-drawer [@drawerInOut] *ngIf=\"showDrawer\">\n    <div class=\"container\" drawer>\n        <sci-drawer-header backText=\"Hosting\" [title]=\"'Additional Resources'\" (backClick)=\"goBack()\">\n        </sci-drawer-header>\n        <div class=\"content\">\n            <div class=\"row1\">\n                <img [src]=\"item?.image?.lg\" alt=\"\" />\n            </div>\n            <div class=\"row2\">\n                <div class=\"title\">\n                    <h3>{{ item?.title }}</h3>\n                </div>\n                <div markdown [data]=\"item?.body\"></div>\n            </div>\n        </div>\n    </div>\n</sci-drawer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LearningMaterialRoutingModule } from './learning-material-routing.module';\nimport { LearningMaterialComponent } from './learning-material.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { DrawerHeaderModule } from '../../shared/components/drawer-header/drawer-header.module';\nimport { DrawerModule } from '../../shared/components/drawer/drawer.module';\n\n\n@NgModule({\n  declarations: [LearningMaterialComponent],\n  imports: [\n    CommonModule,\n    LearningMaterialRoutingModule,\n    MatIconModule,\n    MarkdownModule,\n    DrawerHeaderModule,\n    DrawerModule\n  ]\n})\nexport class LearningMaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { DiscoverItem } from '../../core/models/discover-item';\nimport { ContentService } from '../../shared/services/content.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MacroscopesResolverService implements Resolve<DiscoverItem[]> {\n  result!: Observable<DiscoverItem[]> | Observable<never>;\n  cached = false;\n  constructor(private content: ContentService) { }\n\n  resolve(): Observable<DiscoverItem[]> | Observable<never> {\n    if (!this.cached) {\n      this.result = this.content.getIndex<DiscoverItem>('app-macroscopes').pipe(take(1));\n      this.cached = true;\n    }\n    return this.result;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { getSegmentedDate } from '../../../constants/utils';\nimport { Blog } from '../../../pages/blogs/blogs-resolver.service';\n@Component({\n  selector: 'sci-blog-tile',\n  templateUrl: './blog-tile.component.html',\n  styleUrls: ['./blog-tile.component.scss']\n})\nexport class BlogTileComponent {\n\n  @Input() blog!: Blog;\n\n  constructor(private router: Router) { }\n\n  get thumbnail(): string {\n    if (this.blog && this.blog.blogImages.length) {\n      return this.blog.blogImages[0].sm;\n    } else {\n      return '';\n    }\n  }\n  gotoBlog(): void {\n    if (this.blog) {\n      const [year, month, date] = getSegmentedDate(this.blog.date);\n      this.router.navigate(['/', 'learning-center', 'blogs', year, `${month}-${date}`, this.blog.slug]);\n    }\n  }\n}\n","<div (click)=\"gotoBlog()\" *ngIf=\"blog\">\n  <div class=\"image-container\">\n    <img [src]=\"thumbnail\" alt=\"Blog Thumbnail\" />\n  </div>\n  <div class=\"blog-title\">\n    <p>{{ blog?.title }}</p>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BlogTileComponent } from './blog-tile.component';\n\n\n\n@NgModule({\n  declarations: [BlogTileComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BlogTileComponent]\n})\nexport class BlogTileModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Params, Resolve } from '@angular/router';\nimport { combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, take } from 'rxjs/operators';\n\nimport { MapMacroscopeItem, Language } from '../../core/models/discover-item';\nimport { ContentService } from './content.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MapMacroscopeResolverService implements Resolve<MapMacroscopeItem> {\n  constructor(private content: ContentService) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot\n  ): Observable<MapMacroscopeItem> | Observable<never> {\n    const languages$ = this.content\n      .getContent<Params[]>('site/languages.md')\n      .pipe(take(1));\n    const language = route.queryParamMap.get('lang') || 'en';\n    const type = route.data.type;\n    const iteration = route.paramMap.get('iteration');\n    const sequence = route.paramMap.get('sequence');\n    const mapSlug = `${type}/${iteration}/${sequence}`;\n    const content$ = this.content.getContent<Params>(mapSlug).pipe(take(1));\n\n    // tslint:disable-next-line: no-any\n    const response$ = combineLatest([languages$, content$]).pipe(\n      map((response: [Params, Params]) => {\n        const item: Params = {};\n        const [languages, data] = response;\n        item.title = data[language].title;\n        item.makers = data.en.makers;\n        item.credit = data[language].creditLine;\n        item.description = data[language].body;\n        item.references = data[language].references;\n        item.thumbnail = `assets/content/${type}/${data.en.iteration}/${data.en.sequence}/${data.en.image.lg}`;\n        item.translations = languages.languages.filter((lang: Language) => {\n          return Object.keys(data).includes(lang.abbr_short);\n        });\n        item.externalLink = data.en.externalLink;\n        item.videoLink = data.en.videoLink;\n        return item;\n      })\n    );\n\n    const people$ = response$.pipe(\n      map((items) => items.makers),\n      mergeMap((slugs) => {\n        const forkJoins: Observable<Params>[] = slugs.map((slug: string) => {\n          // {'s1': {}}, {'s2': {}}\n          return this.content.getContent<Params>(`person/${slug}`).pipe(\n            take(1),\n            map((result: Params) => {\n              return {\n                [slug]: result,\n              };\n            }),\n            catchError(() => {\n              return of({});\n            })\n          );\n        });\n        // [ {'s1': {}}, {'s2': {}} ]\n        return forkJoin(forkJoins);\n      }),\n      map((array: Params[]) => {\n        const result = {};\n        array.forEach((element) => {\n          Object.assign(result, element);\n        });\n        // {'s1': {}, 's2': {}}\n        return result;\n      })\n    );\n    return combineLatest([response$, people$]).pipe(\n      map((result: Params[]) => {\n        const [response, people] = result;\n        const makers = response.makers\n          .map((slug: string) => {\n            if (people.hasOwnProperty(slug) && people[slug]) {\n              const profile = people[slug];\n              if (profile) {\n                const folder = slug.split('/')[0];\n                profile.image = `assets/content/person/${folder}/${profile.image}`;\n                return profile;\n              }\n            } else {\n              return {\n                name: slug.split('/')[0].replace('-', ' '),\n                body: 'Lorem Ipsum'\n              };\n            }\n          })\n          .filter((profile: Params | undefined) => profile);\n        response.makers = makers;\n        return response as MapMacroscopeItem;\n      })\n    );\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}