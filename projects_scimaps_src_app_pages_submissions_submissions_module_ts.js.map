{"version":3,"file":"projects_scimaps_src_app_pages_submissions_submissions_module_ts.js","mappings":"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","sources":["./projects/scimaps/src/app/pages/submissions/submission-resolver.service.ts","./projects/scimaps/src/app/pages/submissions/submissions-body-resolver.service.ts","./projects/scimaps/src/app/pages/submissions/submissions-routing.module.ts","./projects/scimaps/src/app/pages/submissions/submissions.component.ts","./projects/scimaps/src/app/pages/submissions/submissions.component.html","./projects/scimaps/src/app/pages/submissions/submissions.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Params, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DiscoverItem } from '../../core/models/discover-item';\nimport { ContentService } from '../../shared/services/content.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubmissionResolverService implements Resolve<DiscoverItem[]> {\n\n  result!: Observable<DiscoverItem[]> | Observable<never>;\n\n  constructor(private content: ContentService) { }\n\n  resolve(route: Params): Observable<DiscoverItem[]> | Observable<never> {\n    const {iteration} = route.params;\n    return this.content.getIndex<DiscoverItem>('app-submissions').pipe(\n      take(1),\n      map(item => {\n        if (iteration) {\n          return item.filter(submission => {\n            return submission.iteration === parseInt(iteration, 10);\n          });\n        } else {\n          const maxIteration = Math.max(...item.map(s => s.iteration));\n          return item.filter(s => s.iteration === maxIteration);\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { ContentService } from '../../shared/services/content.service';\n\ninterface SubmissionsBody {\n  body: string;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubmissionsBodyResolverService implements Resolve<SubmissionsBody> {\n  directory = 'assets/content/site/submissions';\n\n  constructor(private content: ContentService, private router: Router) { }\n\n  resolve(): Observable<SubmissionsBody> | Observable<never> {\n    return this.content.getContent<SubmissionsBody>('site/submissions/submissions.md').pipe(\n      take(1),\n      map(response => {\n        return response;\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SubmissionResolverService } from './submission-resolver.service';\nimport { SubmissionsBodyResolverService } from './submissions-body-resolver.service';\nimport { SubmissionsComponent } from './submissions.component';\n\nconst routes: Routes = [\n  {\n    path: ':iteration',\n    component: SubmissionsComponent,\n    resolve: {\n      submissions: SubmissionResolverService\n    },\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('../submission/submission.module').then(m => m.SubmissionModule),\n        data: { animation: 'Macroscope', type: 'submission' }\n      }\n    ]\n  },\n  {\n    path: '',\n    component: SubmissionsComponent,\n    resolve: {\n      submissions: SubmissionResolverService,\n      body: SubmissionsBodyResolverService\n    },\n    runGuardsAndResolvers: 'pathParamsOrQueryParamsChange'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SubmissionsRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { DiscoverItem } from '../../core/models/discover-item';\n\n@Component({\n  selector: 'sci-submissions',\n  templateUrl: './submissions.component.html',\n  styleUrls: ['./submissions.component.scss']\n})\nexport class SubmissionsComponent implements OnInit, OnDestroy {\n\n  submissions: DiscoverItem[] = [];\n  dataSubscription: Subscription | undefined;\n\n  thumbnails = [];\n\n  constructor(private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n    if (this.route.data) {\n      this.dataSubscription = this.route.data.subscribe((data) => {\n        const { submissions } = data;\n        if (submissions) {\n          this.submissions = submissions;\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.dataSubscription) {\n      this.dataSubscription.unsubscribe();\n    }\n  }\n}\n","<ng-container *ngFor=\"let item of submissions;let i = index\">\n    <div class=\"main\">\n        <sci-discover-listing class=\"discover-item submissions\" [discoverItem]=\"item\" [type]=\"'submissions'\">\n        </sci-discover-listing>\n    </div>\n</ng-container>\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SubmissionsRoutingModule } from './submissions-routing.module';\nimport { SubmissionsComponent } from './submissions.component';\nimport { DiscoverListingModule } from '../../shared/components/discover-listing/discover-listing.module';\n\n@NgModule({\n  declarations: [SubmissionsComponent],\n  imports: [\n    CommonModule,\n    SubmissionsRoutingModule,\n    DiscoverListingModule\n  ]\n})\nexport class SubmissionsModule { }\n"],"names":[],"sourceRoot":"webpack:///"}