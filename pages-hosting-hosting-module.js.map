{"version":3,"sources":["./src/app/shared/components/card-link/card-link.module.ts","./src/app/pages/hosting/hosting.module.ts","./src/app/pages/hosting/learning-materials-resolver.service.ts","./src/app/pages/hosting/hosting.component.ts","./src/app/pages/hosting/hosting.component.html","./src/app/shared/components/learning-material-list/learning-materials-list.module.ts","./src/app/shared/components/learning-material-item/learning-material-item.component.ts","./src/app/shared/components/learning-material-item/learning-material-item.component.html","./src/app/shared/components/card-link/card-link.component.ts","./src/app/shared/components/card-link/card-link.component.html","./src/app/shared/components/learning-material-list/learning-material-list.component.ts","./src/app/shared/components/learning-material-list/learning-material-list.component.html","./src/app/shared/components/learning-material-item/learning-material-item.module.ts","./src/app/pages/hosting/hosting-routing.module.ts","./src/app/pages/hosting/hosting-body-resolver.service.ts"],"names":[],"mappings":"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","file":"pages-hosting-hosting-module.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { CardLinkComponent } from './card-link.component';\n\n\n\n@NgModule({\n  declarations: [CardLinkComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [ CardLinkComponent ]\n})\nexport class CardLinkModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { CardLinkModule } from '../../shared/components/card-link/card-link.module';\nimport { CarouselModule } from '../../shared/components/carousel/carousel.module';\nimport { DrawerHeaderModule } from '../../shared/components/drawer-header/drawer-header.module';\nimport { DrawerModule } from '../../shared/components/drawer/drawer.module';\nimport { LearningMaterialsListModule } from '../../shared/components/learning-material-list/learning-materials-list.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { HostingRoutingModule } from './hosting-routing.module';\nimport { HostingComponent } from './hosting.component';\n\n\n\n@NgModule({\n  declarations: [HostingComponent],\n  imports: [\n    CommonModule,\n    HostingRoutingModule,\n    CardLinkModule,\n    CarouselModule,\n    MarkdownModule,\n    MatIconModule,\n    DrawerModule,\n    MatCardModule,\n    SharedModule,\n    LearningMaterialsListModule,\n    DrawerHeaderModule,\n    MatTabsModule\n  ]\n})\nexport class HostingModule { }\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { isHttp } from '../../constants/utils';\nimport { ContentService, toSlug } from '../../shared/services/content.service';\n\nexport interface LearningMaterial {\n  title: string;\n  order: number;\n  body: string;\n  image: {\n    sm: string;\n    lg: string;\n  };\n  slug: string;\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class LearningMaterialsResolverService\n  implements Resolve<LearningMaterial[]>\n{\n  directory = 'assets/content/learning-materials';\n  constructor(private contentService: ContentService) { }\n\n  updatePaths(lm: LearningMaterial): LearningMaterial {\n    lm.slug = toSlug(lm.title);\n    if (lm.image) {\n      if (lm.image.sm && !isHttp(lm.image.sm)) {\n        lm.image.sm = `${this.directory}/${lm.slug}/${lm.image.sm}`;\n      }\n      if (lm.image.lg && !isHttp(lm.image.lg)) {\n        lm.image.lg = `${this.directory}/${lm.slug}/${lm.image.lg}`;\n      }\n    }\n    return lm;\n  }\n\n  resolve(): LearningMaterial[] | Observable<LearningMaterial[]> {\n    return this.contentService\n      .getIndex<LearningMaterial>('learning-materials')\n      .pipe(\n        take(1),\n        map((response: LearningMaterial[]) => {\n          return response.sort((a, b) => a.order - b.order);\n        }),\n        map((response: LearningMaterial[]) => {\n          return response.map((lm: LearningMaterial) => {\n            lm.slug = toSlug(lm.title);\n            return this.updatePaths(lm);\n          });\n        })\n      );\n  }\n}\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { drawerInOut } from '../../constants/drawer.animations';\nimport { LearningMaterial } from './learning-materials-resolver.service';\n\n@Component({\n  selector: 'sci-hosting',\n  templateUrl: './hosting.component.html',\n  styleUrls: ['./hosting.component.scss'],\n  animations: [drawerInOut],\n})\nexport class HostingComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'sci-hosting';\n\n  learningMaterials: LearningMaterial[] = [];\n  get tabHeaders(): string[] {\n    return this.tabs.map((tab: { header: string }) => tab.header);\n  }\n  constructor(private route: ActivatedRoute) {}\n  overviewText = 'Hello';\n  carouselImages: { lg: string; sm: string; title: string }[] = [];\n  installGuide = '';\n  masterBooklet = '';\n  bannerText = '';\n  activePageTab = 0;\n  tabs: { header: string; content: string; image: string }[] = [];\n  showTab = false; // maintains drawer show/hide for tab\n\n  ngOnInit(): void {\n    // this.route\n    this.route.data.subscribe((data) => {\n      // Other keys\n      const { body, learningMaterials } = data;\n      if (learningMaterials) {\n        this.learningMaterials = learningMaterials;\n      }\n      ({\n        overview: this.overviewText,\n        install_guide: this.installGuide,\n        master_booklet: this.masterBooklet,\n        carousel: this.carouselImages,\n        banner_text: this.bannerText,\n        tabs: this.tabs,\n      } = this.getBodyContent(body));\n    });\n  }\n\n  getBodyContent(body: Params): Params {\n    const result: Params = {};\n    const keys = [\n      'overview',\n      'tabs',\n      'carousel',\n      'install_guide',\n      'master_booklet',\n      'banner_text',\n    ];\n    keys.forEach((key: string) => {\n      if (body.hasOwnProperty(key) && body[key]) {\n        result[key] = body[key];\n      }\n    });\n    return result;\n  }\n\n  updateActivePageTab(index: number): void {\n    this.activePageTab = index;\n  }\n}\n","<h1 class=\"header1\"> Hosting </h1>\n<div class=\"highlight-content\">\n    <div class=\"overview-container\">\n        <div markdown [data]=\"overviewText\"></div>\n        <div class=\"spacer-24\"></div>\n        <div class=\"pdf-docs\">\n            <a [href]=\"masterBooklet\" class=\"master-booklet\" target=\"_blank\" rel=\"noopener noreferrer\">Information Booklet (PDF)</a>\n            <a [href]=\"installGuide\" class=\"install-guide\" target=\"_blank\" rel=\"noopener noreferrer\">Installation Guide (PDF)</a>\n        </div>\n    </div>\n    <div class=\"carousel-container\">\n        <!-- mobile carousel -->\n        <sci-carousel class=\"carousel\">\n            <sci-carousel-item class=\"sci-carousel-item\" *ngFor=\"let item of carouselImages\">\n                <!-- desktop -->\n                <div *sciBreakpoint=\"'desktop'\" class=\"carousel-item\">\n                    <img [src]=\"item.lg\" class=\"carousel-image\" [alt]=\"item.lg.split('/')[3]\">\n                    <div class=\"carousel-image-title\">{{ item.title }}</div>\n                </div>\n                <!-- mobile / tablet -->\n                <div *sciBreakpoint=\"'desktop-'\" class=\"carousel-item\">\n                    <img [src]=\"item.sm\" class=\"carousel-image\" [alt]=\"item.sm.split('/')[3]\">\n                    <div class=\"carousel-image-title\">{{ item.title }}</div>\n                </div>\n            </sci-carousel-item>\n        </sci-carousel>\n    </div>\n</div>\n\n<div class=\"spacer-72\"></div>\n<hr class=\"divider\">\n<div class=\"spacer-48\"></div>\n<div class=\"main-content\">\n    <div class=\"col1\">\n        <!-- desktop tab header and tab content -->\n        <div *sciBreakpoint=\"'mobile+'\" class=\"tabs\">\n            <mat-tab-group mat-align-tabs=\"start\">\n                <ng-container *ngFor=\"let tab of tabHeaders;let i = index\">\n                    <mat-tab [label]=\"tab\">\n                        <div class=\"tab-content\">\n                            <div class=\"col1\">\n                                <img [src]=\"tabs[i].image\" alt=\"\">\n                            </div>\n                            <div class=\"col2\" markdown [data]=\"tabs[i].content\">\n                            </div>\n                        </div>\n                    </mat-tab>\n                </ng-container>\n            </mat-tab-group>\n        </div>\n        <!-- mobile drawer controller and drawers -->\n        <div *sciBreakpoint=\"'mobile-'\" class=\"mobile-tabs\">\n            <div class=\"mobile-button\" *ngFor=\"let tab of tabHeaders; let i = index\"\n                (click)=\"updateActivePageTab(i); showTab = true\">\n                {{tab}}\n                <mat-icon class=\"mobile-icon\">chevron_right</mat-icon>\n            </div>\n            <!-- drawer -->\n            <sci-drawer [@drawerInOut] *ngIf=\"showTab\" class=\"sci-drawer\">\n                <div class=\"drawer-container\" drawer>\n                    <sci-drawer-header [title]=\"tabHeaders[activePageTab]\" (backClick)=\"showTab = false\">\n                    </sci-drawer-header>\n                    <div class=\"drawer-content\">\n                        <div class=\"row1\">\n                            <img [src]=\"tabs[activePageTab].image\" alt=\"\">\n                        </div>\n                        <div class=\"row2\">\n                            <div markdown [data]=\"tabs[activePageTab].content\"></div>\n                        </div>\n                    </div>\n                </div>\n            </sci-drawer>\n            <div class=\"spacer-48\"></div>\n        </div>\n    </div>\n</div>\n\n<div class=\"spacer-72\">\n</div>\n\n<div class=\"bannerText\">\n    <div markdown [data]=\"bannerText\">\n    </div>\n</div>\n\n<div class=\"spacer-72\">\n</div>\n\n<sci-learning-material-list header=\"Learning Material that come with Exhibit.\" [items]=\"learningMaterials\">\n</sci-learning-material-list>\n\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LearningMaterialListComponent } from './learning-material-list.component';\nimport { SharedModule } from '../../shared.module';\nimport { LearningMaterialItemModule } from '../learning-material-item/learning-material-item.module';\n\n@NgModule({\n  declarations: [LearningMaterialListComponent],\n  imports: [LearningMaterialItemModule, CommonModule, SharedModule],\n  exports: [LearningMaterialListComponent],\n})\nexport class LearningMaterialsListModule {}\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { drawerInOut } from '../../../constants/drawer.animations';\nimport { LearningMaterial } from '../../../pages/hosting/learning-materials-resolver.service';\n\n@Component({\n  selector: 'sci-learning-material-item',\n  templateUrl: './learning-material-item.component.html',\n  styleUrls: ['./learning-material-item.component.scss'],\n  animations: [drawerInOut]\n})\nexport class LearningMaterialItemComponent {\n\n  @Input() item: LearningMaterial = {} as LearningMaterial;\n\n  constructor(private router: Router) {}\n\n  gotoLearningMaterial(): void {\n    if (this.item?.slug) {\n      this.router.navigate(['/', 'hosting', 'learning-material', this.item.slug], {state: {direction: 'forward'}});\n    }\n  }\n}\n","<!-- desktop -->\n<mat-card *sciBreakpoint=\"'mobile+'\" class=\"lm-item-desktop\" (click)=\"gotoLearningMaterial()\">\n  <div class=\"row1\">\n    <img mat-card-image [src]=\"item.image.sm\" [alt]=\"item.image.sm\"/>\n  </div>\n  <div class=\"row2\">\n    <mat-card-title>\n      <h4 class=\"header4\">{{ item?.title }}</h4>\n    </mat-card-title>\n    <div class=\"content\">\n      <mat-card-content markdown [data]=\"item.body.length > 80 ? item.body.slice(0, 80) + '...' : item.body\">\n      </mat-card-content>\n    </div>\n  </div>\n</mat-card>\n\n<!-- mobile -->\n<mat-card *sciBreakpoint=\"'mobile-'\" class=\"lm-item-mobile\" (click)=\"gotoLearningMaterial()\">\n  <div class=\"col1\">\n    <img mat-card-img [src]=\"item.image.sm\" alt=\"\" />\n  </div>\n  <div class=\"col2\">\n    <mat-card-title>\n      <h4 class=\"header4\">{{ item?.title }}</h4>\n    </mat-card-title>\n  </div>\n  <div class=\"col3\">\n    <mat-icon class=\"mobile-icon\">chevron_right</mat-icon>\n  </div>\n</mat-card>","import { Component, HostBinding, Input } from '@angular/core';\nimport { CardLinkItem } from '../../../core/models/card-link-item';\n\n@Component({\n  selector: 'sci-card-link',\n  templateUrl: './card-link.component.html',\n  styleUrls: ['./card-link.component.scss']\n})\nexport class CardLinkComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'sci-card-link';\n\n  @Input() cardData!: CardLinkItem;\n\n  goToLink(): void {\n    window.open(this.cardData.link, '_blank');\n  }\n\n  get imageUrl(): string {\n    return `url('${this.cardData.imageSource}')`;\n  }\n}\n","<div class=\"card mat-elevation-z2\" (click)=\"goToLink()\">\n    <div class=\"thumbnail\" [style.background-image]=\"imageUrl\"></div>\n    <div class=\"title\">{{ cardData.label }}</div>\n    <mat-icon class=\"icon\">arrow_forward_ios</mat-icon>\n</div>","import { Component, HostBinding, Input } from '@angular/core';\nimport { LearningMaterial } from '../../../pages/hosting/learning-materials-resolver.service';\n\n@Component({\n  selector: 'sci-learning-material-list',\n  templateUrl: './learning-material-list.component.html',\n  styleUrls: ['./learning-material-list.component.scss'],\n})\nexport class LearningMaterialListComponent {\n  @HostBinding('class') readonly classname = 'sci-learning-material-list';\n\n  @Input() items: LearningMaterial[] = [];\n  @Input() header = '';\n}\n","<h1 class=\"header1\">{{ header }}</h1>\n\n<div class=\"spacer-48\">\n</div>\n<div class=\"learning-material-container\">\n  <!-- desktop list-->\n  <div *sciBreakpoint=\"'mobile+'\" class=\"lm-list-desktop\">\n    <ng-container *ngFor=\"let item of items\">\n      <sci-learning-material-item id=\"{{item.slug}}\" [item]=\"item\"></sci-learning-material-item>\n    </ng-container>\n  </div>\n  <!-- mobile list -->\n  <div *sciBreakpoint=\"'mobile-'\" class=\"lm-list-mobile\">\n    <ng-container *ngFor=\"let item of items\">\n      <sci-learning-material-item id=\"{{item.slug}}\" [item]=\"item\"></sci-learning-material-item>\n    </ng-container>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LearningMaterialItemComponent } from './learning-material-item.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { SharedModule } from '../../shared.module';\nimport { DrawerModule } from '../drawer/drawer.module';\n\n\n\n@NgModule({\n  declarations: [LearningMaterialItemComponent],\n  imports: [\n    MatIconModule,\n    MatCardModule,\n    MarkdownModule,\n    SharedModule,\n    CommonModule,\n    DrawerModule\n  ],\n  exports: [LearningMaterialItemComponent]\n})\nexport class LearningMaterialItemModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HostingBodyResolverService } from './hosting-body-resolver.service';\n\nimport { HostingComponent } from './hosting.component';\nimport { LearningMaterialsResolverService } from './learning-materials-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HostingComponent,\n    resolve: {\n      body: HostingBodyResolverService,\n      learningMaterials: LearningMaterialsResolverService,\n    },\n    children: [\n      {\n        path: 'learning-material',\n        loadChildren: () => import('../learning-material/learning-material.module').then(m => m.LearningMaterialModule),\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HostingRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Resolve\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { isHttp } from '../../constants/utils';\nimport { ContentService } from '../../shared/services/content.service';\n\nexport interface HostingBody {\n  tabs: Array<{ header: string, image: string, content: string }>;\n  overview: string;\n  carousel: { sm: string; lg: string }[];\n  install_guide: string;\n  master_booklet: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HostingBodyResolverService implements Resolve<HostingBody> {\n  mdPath = 'site/hosting/hosting.md';\n  directory = 'assets/content/site/hosting';\n  constructor(private content: ContentService) {}\n\n  resolve(): Observable<HostingBody> | Observable<never> {\n    return this.content.getContent<HostingBody>(this.mdPath).pipe(\n      take(1),\n      map((body: HostingBody) => {\n        return this.updatePaths(body);\n      })\n    );\n  }\n\n  // converts paths to absolute paths.\n  updatePaths(body: HostingBody): HostingBody {\n    if (body.install_guide && !isHttp(body.install_guide)) {\n      body.install_guide = `${this.directory}/${body.install_guide}`;\n    }\n    if (body.master_booklet && !isHttp(body.master_booklet)) {\n      body.master_booklet = `${this.directory}/${body.master_booklet}`;\n    }\n    this.updateCarouselPaths(body);\n    this.updateTabsPaths(body);\n    return body;\n  }\n\n  updateCarouselPaths(body: HostingBody): void {\n    const { carousel } = body;\n    if (carousel && Array.isArray(carousel)) {\n      carousel.forEach((image) => {\n        if (image.lg && !isHttp(image.lg)) {\n          image.lg = `${this.directory}/${image.lg}`;\n        }\n        if (image.sm && !isHttp(image.sm)) {\n          image.sm = `${this.directory}/${image.sm}`;\n        }\n      });\n      body.carousel = carousel;\n    }\n  }\n\n  updateTabsPaths(body: HostingBody): void {\n    const { tabs } = body;\n    tabs.forEach((tab) => {\n      if (tab.image && !isHttp(tab.image)) {\n        tab.image = `${this.directory}/${tab.image}`;\n      }\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}