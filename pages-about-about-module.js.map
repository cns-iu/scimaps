{"version":3,"sources":["./src/app/constants/region-labels.ts","./src/app/shared/components/partners/partners.module.ts","./src/app/pages/about/news-resolver.service.ts","./src/app/shared/components/profile-item/profile-item.component.ts","./src/app/shared/components/profile-item/profile-item.component.html","./src/app/pages/about/about-body-resolver.service.ts","./src/app/shared/components/partners/partners.component.ts","./src/app/shared/components/partners/partners.component.html","./src/app/pages/about/about-routing.module.ts","./src/app/shared/components/profile-item/profile-item.module.ts","./src/app/pages/about/about.module.ts","./src/app/shared/components/profile-gallery/profile-gallery.component.ts","./src/app/shared/components/profile-gallery/profile-gallery.component.html","./src/app/shared/components/profile-gallery/profile-gallery.module.ts","./src/app/pages/about/about.component.ts","./src/app/pages/about/about.component.html","./src/app/pages/about/about-resolver.service.ts"],"names":[],"mappings":"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","file":"pages-about-about-module.js","sourcesContent":["export const REGIONS: {[key: string]: string} = {\n  n_america: 'North America',\n  c_america: 'Central America',\n  s_america: 'South America',\n  europe: 'Europe',\n  asia: 'Asia',\n  africa: 'Africa',\n  australia: 'Australia',\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PartnersComponent } from './partners.component';\n\n\n\n@NgModule({\n  declarations: [PartnersComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [PartnersComponent]\n})\nexport class PartnersModule { }\n","import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { getSegmentedDate, isHttp } from '../../constants/utils';\nimport { NewsItem } from '../../shared/components/news-item/news-item.model';\nimport { ContentService, toSlug } from '../../shared/services/content.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsResolverService {\n\n  directory = 'content/news';\n\n  constructor(private contentService: ContentService) { }\n\n  // Used to get full path of resources.\n  getSourceLink(newsItem: NewsItem, type: string = 'image'): string {\n    const [year, month, date] = getSegmentedDate(newsItem.date);\n    const slug = toSlug(newsItem.title);\n\n    if (type === 'pdfLink') {\n      return `assets/${this.directory}/${year}/${month}-${date}/${slug}/${newsItem.pdfLink}`;\n    } else {\n      return `assets/${this.directory}/${year}/${month}-${date}/${slug}/${newsItem.thumbnail}`;\n    }\n  }\n\n  // Mapper\n  toNewsItem(newsItem: Params): NewsItem {\n    return {\n      title: newsItem.title,\n      date: newsItem.date,\n      publication: newsItem.source,\n      thumbnail: newsItem.image,\n      pdfLink: newsItem.pdfLink,\n      sourceUrl: newsItem.sourceUrl\n    };\n  }\n\n  resolve(): Observable<NewsItem[]> | Observable<never> {\n    return this.contentService.getIndex<Params[]>('news').pipe(\n      take(1),\n      map((items: Params[]) => {\n        return items.map((item: Params) => {\n          const newsItem: NewsItem = this.toNewsItem(item);\n          newsItem.thumbnail = this.getSourceLink(newsItem);\n          if (newsItem.pdfLink) {\n            if (!isHttp(newsItem.pdfLink)) {\n              newsItem.pdfLink = this.getSourceLink(newsItem, 'pdfLink');\n            }\n          }\n          return newsItem;\n        });\n      })\n    );\n  }\n}\n","import { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, Input } from '@angular/core';\nimport { Profile } from '../../../core/models/profile';\n\n@Component({\n  selector: 'sci-profile-item',\n  templateUrl: './profile-item.component.html',\n  styleUrls: ['./profile-item.component.scss'],\n  animations: [\n    trigger('contentTrigger', [\n      transition(':enter', [\n        style({\n          opacity: 1,\n          height: '0px',\n        }),\n        animate('300ms ease-out', style({\n          opacity: 1,\n          height: '*'\n        })),\n      ]),\n      transition(':leave', [\n        style({\n          opacity: 1,\n          height: '*'\n        }),\n        animate('200ms ease-in', style({\n          opacity: 0,\n          height: 0\n        }))\n      ]),\n    ])\n  ]\n})\nexport class ProfileItemComponent {\n  @Input() profile!: Profile;\n  @Input() compact = true;\n\n  maxContentLength = 100;\n\n  /** Whether the book content exceeds the maximum character count */\n  get hasLongContent(): boolean {\n    return (this.profile?.body?.length || 0) > this.maxContentLength;\n  }\n\n  /** Full profile content */\n  get fullContent(): string {\n    return this.profile.body;\n  }\n\n  /** Profile content - truncated if necessary */\n  get partialContent(): string {\n    const {\n      fullContent,\n      maxContentLength\n    } = this;\n    return `${fullContent.slice(0, maxContentLength)}...`;\n  }\n\n  fullContentVisible = false;\n}\n","<div class=\"profile-item\">\n  <img class=\"profile-image\" [src]=\"profile.image\" [alt]=\"profile.image\" />\n  <div class=\"profile-about\">\n    <div class=\"profile-name\">{{ profile.name }}</div>\n    <div class=\"profile-title\">{{ profile.title }}</div>\n    <div class=\"profile-affiliation\" *ngIf=\"compact === true\">\n      {{ profile.affiliation }}\n    </div>\n    <div class=\"profile-body\" *ngIf=\"compact === false\">\n      <!-- Mobile -->\n      <div *sciBreakpoint=\"'mobile-'\">\n        <div class=\"markdown full\" markdown [data]=\"fullContent\"></div>\n      </div>\n      \n      <!-- Desktop -->\n      <div *sciBreakpoint=\"'mobile+'\">\n        <div *ngIf=\"!fullContentVisible\" class=\"markdown partial\" markdown [data]=\"partialContent\"></div>\n        <div [@contentTrigger] *ngIf=\"fullContentVisible\" class=\"markdown full\" markdown [data]=\"fullContent\"></div>\n        <div\n          *ngIf=\"hasLongContent\"\n          class=\"show-more\"\n          (click)=\"fullContentVisible = !fullContentVisible\">\n          {{ fullContentVisible ? \"Show less\" : \"Read more...\" }}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { catchError, map, take } from 'rxjs/operators';\nimport { ContentService } from '../../shared/services/content.service';\nimport { Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { isHttp } from '../../constants/utils';\n\ninterface AboutBody {\n  curatorsDescription: string;\n  advisoryBoardDescription: string;\n  ambassadorsDescription: string;\n  overviewParagraph: string;\n  overviewQuote: string;\n  annualReports: {year: string, pdfLink: string }[];\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AboutBodyResolverService implements Resolve<AboutBody> {\n  directory = 'assets/content/site/about';\n  constructor(private content: ContentService) {}\n  resolve(): Observable<AboutBody> | Observable<never> {\n    const mdPath = 'site/about/about.md';\n    return this.content.getContent<AboutBody>(mdPath).pipe(\n      take(1),\n      map((body: AboutBody) => {\n        const { annualReports } = body;\n        if (annualReports && Array.isArray(annualReports)) {\n          annualReports.forEach((report: {year: string, pdfLink: string}) => {\n            const pdfLink = report.pdfLink;\n            if (!isHttp(pdfLink)) {\n              report.pdfLink = `${this.directory}/${report.pdfLink}`;\n            }\n          });\n          body.annualReports = annualReports;\n        }\n        return body;\n      }),\n      catchError(() => {\n        console.error('Error in fetching', mdPath);\n        return of({} as AboutBody);\n      }));\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'sci-partners',\n  templateUrl: './partners.component.html',\n  styleUrls: ['./partners.component.scss']\n})\nexport class PartnersComponent {\n  data: { name: string; logo: string; link: string }[] = [\n    {\n      name: 'CNS',\n      logo: 'assets/logos/logo-cns.svg',\n      link: 'https://cns.iu.edu',\n    },\n    {\n      name: 'Luddy',\n      logo: 'assets/logos/logo-luddy-school.svg',\n      link: 'https://luddy.indiana.edu/index.html',\n    },\n    {\n      name: 'McDonnel',\n      logo: 'assets/logos/logo-james-s-mcdonnell-foundation.svg',\n      link: 'https://www.jsmf.org/',\n    },\n    {\n      name: 'reuters',\n      logo: 'assets/logos/logo-thomson-reuters.svg',\n      link: 'https://thomsonreuters.com/',\n    },\n    {\n      name: 'NSF',\n      logo: 'assets/logos/logo-nsf.svg',\n      link: 'https://www.nsf.gov/',\n    },\n    {\n      name: 'elsevier',\n      logo: 'assets/logos/logo-elsevier.svg',\n      link: 'https://www.elsevier.com/',\n    },\n  ];\n\n  openLink(link: string): void {\n    window.open(link, '_blank');\n  }\n\n}\n","<!-- Partners -->\n<div class=\"partners\">\n    <h2 class=\"header2\"> Thanks to the following for their support </h2>\n    <div class=\"logos\">\n        <div class=\"flex-item\" *ngFor=\"let partner of data;let i = index;let isEven = even;\">\n            <img [ngClass]=\"isEven ? 'right-aligned': 'left-aligned'\" [src]=\"partner.logo\" [alt]=\"partner.name\"\n                (click)=\"openLink(partner.link)\">\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutComponent } from './about.component';\nimport { AboutResolverService } from './about-resolver.service';\nimport { AboutBodyResolverService } from './about-body-resolver.service';\nimport { NewsResolverService } from './news-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutComponent,\n    resolve: {\n      profiles: AboutResolverService,\n      newsItems: NewsResolverService,\n      body: AboutBodyResolverService\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AboutRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileItemComponent } from './profile-item.component';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { SharedModule } from '../../shared.module';\n\n\n\n@NgModule({\n  declarations: [ProfileItemComponent],\n  imports: [\n    CommonModule,\n    MarkdownModule,\n    SharedModule\n  ],\n  exports: [ProfileItemComponent]\n})\nexport class ProfileItemModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { ListViewModule } from '../../shared/components/list-view/list-view.module';\nimport { PartnersModule } from '../../shared/components/partners/partners.module';\nimport { ProfileGalleryModule } from '../../shared/components/profile-gallery/profile-gallery.module';\nimport { SearchOverlayModule } from '../../shared/components/search-overlay/search-overlay.module';\nimport { SelectModule } from '../../shared/components/select/select.module';\nimport { TableModule } from '../../shared/components/table/table.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AboutRoutingModule } from './about-routing.module';\nimport { AboutComponent } from './about.component';\n\n\n@NgModule({\n  declarations: [AboutComponent],\n  imports: [\n    CommonModule,\n    AboutRoutingModule,\n    ProfileGalleryModule,\n    MatSelectModule,\n    SharedModule,\n    PartnersModule,\n    SelectModule,\n    SearchOverlayModule,\n    ListViewModule,\n    TableModule,\n    MarkdownModule,\n    MatTabsModule\n  ]\n})\nexport class AboutModule { }\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { REGIONS } from '../../../constants/region-labels';\nimport { Profile } from '../../../core/models/profile';\n\n@Component({\n  selector: 'sci-profile-gallery',\n  templateUrl: './profile-gallery.component.html',\n  styleUrls: ['./profile-gallery.component.scss']\n})\nexport class ProfileGalleryComponent implements OnInit {\n\n  readonly REGIONS = REGIONS;\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'sci-profile-gallery';\n\n  @Input() profiles!: Profile[];\n  @Input() compact = true;\n  @Input() title = '';\n  @Input() description = '';\n  @Input() groupBy!: 'region';\n\n  profilesByGroup: { [key: string]: Profile[] } = {};\n\n  ngOnInit(): void {\n    if (this.groupBy) {\n      this.profilesByGroup = this.profiles.reduce((accumulator: { [key: string]: Profile[] }, profile: Profile) => {\n        if (profile[this.groupBy]) {\n          const key: string = profile[this.groupBy] as string;\n          if (accumulator[key]) {\n            accumulator[key].push(profile);\n          } else {\n            accumulator[key] = [profile];\n          }\n        }\n        return accumulator;\n      }, {});\n    }\n  }\n}\n","<h2 class=\"header2 title\" *ngIf=\"title !== ''\">{{ title }}</h2>\n<div markdown class=\"description\"  *ngIf=\"description !== ''\" [data]=\"description\"></div>\n\n<!-- Grouped Profiles -->\n<ng-container *ngIf=\"groupBy; else withoutGroup;\">\n  <div class=\"profile-group\" *ngFor=\"let group of profilesByGroup | keyvalue;\">\n    <h4>{{REGIONS[group.key] ? REGIONS[group.key] : group.key}}</h4>\n    <ng-container *ngTemplateOutlet=\"profilesTemplate; context: {'profiles': group.value}\">\n    </ng-container>\n  </div>\n</ng-container>\n\n<ng-template #withoutGroup>\n  <ng-container *ngTemplateOutlet=\"profilesTemplate; context: {'profiles': profiles}\">\n  </ng-container>\n</ng-template>\n\n<!-- Common Template for Array of Profiles -->\n<ng-template #profilesTemplate let-profiles=\"profiles\">\n  <div class=\"profile-container\">\n    <div class=\"profile\" *ngFor=\"let profile of profiles;\">\n      <sci-profile-item [profile]=\"profile\" [compact]=\"compact\"></sci-profile-item>\n    </div>\n  </div>  \n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileGalleryComponent } from './profile-gallery.component';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { ProfileItemModule } from '../profile-item/profile-item.module';\n\n\n\n@NgModule({\n  declarations: [ProfileGalleryComponent],\n  imports: [\n    CommonModule,\n    MarkdownModule,\n    ProfileItemModule\n  ],\n  exports: [ProfileGalleryComponent]\n})\nexport class ProfileGalleryModule { }\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { Profile } from '../../core/models/profile';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { NewsItem } from '../../shared/components/news-item/news-item.model';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'sci-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n})\nexport class AboutComponent implements OnInit {\n  constructor(private route: ActivatedRoute) {}\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'sci-about';\n\n  overviewParagraph = '';\n  overviewQuote = '';\n\n  curatorProfiles: Profile[] = [];\n  curatorsDescription = '';\n  advisoryBoardProfiles: Profile[] = [];\n  advisoryBoardDescription = '';\n  ambassadorProfiles: Profile[] = [];\n  ambassadorsDescription = '';\n  pageTabs = ['Curatorial Team / Advisory Board', 'Exhibit Ambassadors'];\n  newsItems: NewsItem[] = [];\n  annualReports: { year: string; pdfLink: string }[] = [];\n\n  sortHeaders = [\n    {\n      label: 'Source',\n      key: 'publication',\n    },\n    {\n      label: 'Date',\n      key: 'date'\n    }\n  ];\n\n  dataSource: MatTableDataSource<NewsItem> = new MatTableDataSource();\n  searchKey = '';\n  year = '';\n  yearList: string[] = [];\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data) => {\n      const { profiles, body, newsItems } = data;\n      // Profiles\n      ({\n        curatorProfiles: this.curatorProfiles,\n        advisoryBoardProfiles: this.advisoryBoardProfiles,\n        ambassadorProfiles: this.ambassadorProfiles,\n      } = this.groupProfiles(profiles));\n      // Body\n      ({\n        curatorsDescription: this.curatorsDescription,\n        advisoryBoardDescription: this.advisoryBoardDescription,\n        ambassadorsDescription: this.ambassadorsDescription,\n        overviewParagraph: this.overviewParagraph,\n        overviewQuote: this.overviewQuote,\n        annualReports: this.annualReports,\n      } = this.getStaticContent(body));\n      // NewsItems\n      if (newsItems && Array.isArray(newsItems)) {\n        this.newsItems = newsItems;\n        this.dataSource.data = newsItems;\n        this.dataSource.filterPredicate = this.filterData;\n      }\n    });\n    this.setYears();\n  }\n\n  groupProfiles(profiles: Profile[]): { [key: string]: Profile[] } {\n    let curatorProfiles: Profile[] = [];\n    let advisoryBoardProfiles: Profile[] = [];\n    let ambassadorProfiles: Profile[] = [];\n    if (profiles && Array.isArray(profiles)) {\n      curatorProfiles = profiles.filter((profile: Profile) => {\n        return (\n          profile.roles.includes('curator') ||\n          profile.roles.includes('co-curator')\n        );\n      });\n      advisoryBoardProfiles = profiles.filter((profile: Profile) => {\n        return profile.roles.includes('advisory_board');\n      });\n      ambassadorProfiles = profiles.filter((profile: Profile) => {\n        return profile.roles.includes('ambassador');\n      });\n    }\n    return { curatorProfiles, advisoryBoardProfiles, ambassadorProfiles };\n  }\n\n  getStaticContent(body: Params): Params {\n    const keys = [\n      'curatorsDescription',\n      'advisoryBoardDescription',\n      'ambassadorsDescription',\n      'overviewParagraph',\n      'overviewQuote',\n      'annualReports',\n    ];\n    const result: Params = {};\n    keys.forEach((key: string) => {\n      if (body && body.hasOwnProperty(key) && body[key]) {\n        result[key] = body[key];\n      } else {\n        result[key] = '';\n      }\n    });\n    return result;\n  }\n\n  getReport(report: string): void {\n    if (report) {\n      window.open(report, '_blank');\n    }\n  }\n\n  // Predicate for filtering data.\n  filterData(item: NewsItem, filter: string): boolean {\n    const parsedFilter = JSON.parse(filter);\n    let result = true;\n    if (parsedFilter.year && parsedFilter.year !== 'all') {\n      const year = new Date(item.date).getFullYear().toString();\n      result = result && year === parsedFilter.year;\n    }\n\n    if (parsedFilter.searchKey) {\n      result =\n        result &&\n        (item.title?.toLowerCase().includes(parsedFilter.searchKey) ||\n          item.publication?.toLowerCase().includes(parsedFilter.searchKey));\n    }\n    return result;\n  }\n  onSearchChange(searchKey: string): void {\n    this.searchKey = searchKey;\n    this.applyFilter();\n  }\n  onSelectChange(year: string): void {\n    this.year = year;\n    this.applyFilter();\n  }\n  applyFilter(): void {\n    const filter = { year: this.year, searchKey: this.searchKey };\n    const filterString = JSON.stringify(filter);\n    this.dataSource.filter = filterString;\n  }\n  setYears(): void {\n    const years  = new Set<string>();\n    this.dataSource.data.forEach((item: NewsItem) => {\n      const fullDate = new Date(item.date);\n      const year = fullDate.getFullYear().toString();\n      if (!years.has(year)) {\n        years.add(year);\n      }\n    });\n    this.yearList = Array.from(years).sort().reverse();\n  }\n}\n","<!-- Hero -->\n<div class=\"intro\">\n  <h1 class=\"header1\">About the <em>Places & Spaces</em> Exhibition</h1>\n\n  <div class=\"image-container\">\n    <img *sciBreakpoint=\"'mobile-'; else: desktop\" src=\"../../../assets/images/about/image.med.jpg\" alt=\"\">\n    <ng-template #desktop>\n      <img src=\"../../../assets/images/about/image.lg.jpg\" alt=\"\">\n    </ng-template>\n  </div>\n\n  <div class=\"description\">\n    <div class=\"paragraph\">\n      <div markdown [data]=\"overviewParagraph\"></div>\n    </div>\n    <div class=\"quote\">\n      <div markdown [data]=\"overviewQuote\"></div>\n    </div>\n  </div>\n</div>\n\n<!-- Reports -->\n<div class=\"reports\">\n  <div class=\"row\">\n    <div class=\"annual-reports\">\n      <mat-form-field>\n        <mat-select placeholder=\"Annual Reports\" (selectionChange)=\"getReport($event.value)\">\n          <mat-option *ngFor=\"let report of annualReports\" [value]=\"report.pdfLink\">\n            {{report.year}}\n          </mat-option>\n        </mat-select>  \n      </mat-form-field>\n    </div>  \n  </div>  \n</div>\n\n<hr class=\"divider\">\n<div class=\"spacer-24\">\n</div>\n\n<!-- Ambassador Map -->\n<div class=\"ambassador-map\">\n  <div class=\"container\">\n    <img src=\"../../../assets/images/map-advisors-ambassadors.svg\" alt=\"\">\n  </div>\n</div>\n\n<div class=\"spacer-72\">\n</div>\n\n<!-- Tab View -->\n<mat-tab-group mat-align-tabs=\"start\">\n  <ng-container *ngFor=\"let tab of pageTabs; let i = index\">\n    <mat-tab [label]=\"pageTabs[i]\">\n      <ng-template [ngIf]=\"i == 0\">\n        <sci-profile-gallery\n          class=\"profile-gallery\"\n          [title]=\"'Curatorial Team'\"\n          [description]=\"curatorsDescription\"\n          [profiles]=\"curatorProfiles\"\n          [compact]=\"false\">\n        </sci-profile-gallery>\n        <div class=\"spacer-72\">\n        </div>\n        <sci-profile-gallery\n          [title]=\"'Advisory Board'\"\n          [description]=\"advisoryBoardDescription\"\n          [profiles]=\"advisoryBoardProfiles\"\n          [compact]=\"true\">\n        </sci-profile-gallery> \n      </ng-template>\n      <ng-template [ngIf]=\"i == 1\">\n        <sci-profile-gallery\n          [title]=\"'Exhibit Ambassadors'\"\n          [description]=\"ambassadorsDescription\"\n          [profiles]=\"ambassadorProfiles\"\n          [groupBy]=\"'region'\"\n          [compact]=\"true\">\n        </sci-profile-gallery>\n      </ng-template>\n    </mat-tab>\n  </ng-container>\n</mat-tab-group>\n\n<div class=\"spacer-72\">\n</div>\n\n<!-- News -->\n\n<h2 class=\"header2\">In the News</h2>\n<div class=\"row\">\n  <div class=\"group1\">\n      <sci-select [select]=\"year\" [options]=\"yearList\" (selectChange)=\"onSelectChange($event)\">\n      </sci-select>\n      <sci-table [dataSource]=\"dataSource\" [initialSort]=\"{column: 'date', direction: 'desc'}\" [tableHeaders]=\"sortHeaders\" [headersOnly]=\"true\">\n      </sci-table>\n  </div>\n  <sci-search-overlay [search]=\"searchKey\" (searchChange)=\"onSearchChange($event)\">\n  </sci-search-overlay>\n</div>\n\n<sci-list-view class=\"news-list\"\n    [config]=\"{type: 'news', items: (dataSource.connect().asObservable() | async) || [], displayLimit: 6, showAllItems: false}\">\n</sci-list-view>\n\n<div class=\"spacer-72\">\n</div>\n\n<!-- Partners -->\n<sci-partners></sci-partners>\n \n","import { Injectable } from '@angular/core';\nimport { Resolve, Params } from '@angular/router';\nimport { ContentService, toSlug } from '../../shared/services/content.service';\nimport { take, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Profile } from '../../core/models/profile';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AboutResolverService implements Resolve<Profile[]> {\n\n  constructor(private content: ContentService) { }\n\n  /**\n   * getImageSource - used to generate full asset path of the image of the profile.\n   * @param - Profile\n   * @returns - string - relative path of the image in assets.\n   */\n  getImageSource(profile: Profile): string {\n    const directory = 'content/person';\n    return `assets/${directory}/${profile.slug}/${profile.image}`;\n  }\n\n  resolve(): Observable<Profile[]> | Observable<never> {\n    return this.content.getIndex<Params>('people').pipe(\n      take(1),\n      map((items: {[key: string]: string}[]) => {\n        return items.filter(item => item.name).map((item: Params) => {\n          const profile: Profile = {\n            name: item.name,\n            slug: toSlug(item.name),\n            title: item.jobTitle,\n            link: item.homepage,\n            body: item.body,\n            affiliation: item.affiliation,\n            image: item.image,\n            roles: item.roles || [],\n            location_name: item.location_name,\n            region: item.region,\n          };\n          profile.image = this.getImageSource(profile);\n          return profile;\n        });\n      }),\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}