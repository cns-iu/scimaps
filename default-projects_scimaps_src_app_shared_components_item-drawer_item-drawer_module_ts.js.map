{"version":3,"file":"default-projects_scimaps_src_app_shared_components_item-drawer_item-drawer_module_ts.js","mappings":"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","sources":["./projects/scimaps/src/app/shared/components/item-drawer/item-drawer.component.ts","./projects/scimaps/src/app/shared/components/item-drawer/item-drawer.component.html","./projects/scimaps/src/app/shared/components/item-drawer/item-drawer.module.ts"],"sourcesContent":["import { Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { drawerInOut } from '../../../constants/drawer.animations';\nimport { MapMacroscopeItem } from '../../../core/models/discover-item';\nimport { PurchaseModalComponent } from '../purchase-modal/purchase-modal.component';\n\n/**\n * Drawer that opens when a map or macroscope item is selected\n */\n@Component({\n  selector: 'sci-item-drawer',\n  templateUrl: './item-drawer.component.html',\n  styleUrls: ['./item-drawer.component.scss'],\n  animations: [drawerInOut]\n})\nexport class ItemDrawerComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'sci-item-drawer';\n\n  /**\n   * Type of item displayed\n   */\n  @Input() type!: 'map' | 'macroscope' | 'submission';\n\n  /**\n   * Item to be displayed in the drawer\n   */\n  @Input() item!: MapMacroscopeItem;\n\n  /**\n   * Emits the selected language when the language changes\n   */\n  @Output() languageChange = new EventEmitter<string>();\n\n  /**\n   * Currently selected language\n   */\n  selectedLanguage = 'en';\n  showDrawer = false;\n\n  makersDrawer = false;\n  constructor(private dialog: MatDialog, private router: Router, private route: ActivatedRoute) { }\n  ngOnInit(): void {\n    this.showDrawer = true;\n  }\n\n  /**\n   * Combines the maker names\n   */\n  get makers(): string {\n    return this.item.makers.map(maker => maker.name).join(', ');\n  }\n\n  /**\n   * Closes item drawer component and returns to the maps or macroscopes page\n   */\n  close(): void {\n    this.showDrawer = false;\n    setTimeout(() => {\n      this.router.navigate(['/', this.type + 's']);\n    }, 500);\n  }\n\n  /**\n   * Sets selectedLanguage to selected language and emits the new language\n   * @param language The language selected\n   */\n  languageSelect(language: string): void {\n    this.selectedLanguage = language;\n    this.languageChange.emit(language);\n  }\n\n  /**\n   * Opens purchase modal\n   */\n  openPurchase(): void {\n    this.dialog.open(PurchaseModalComponent, {\n      width: window.innerWidth <= 768 ? '100%' : '738px'\n    });\n  }\n\n  redirect(): void {\n    if (this.type === 'map') {\n      this.router.navigate(['detail'], {relativeTo: this.route});\n    }\n    else if (this.type === 'macroscope') {\n      const {videoLink, externalLink} = this.item;\n      if (videoLink) {\n        this.router.navigate(['detail'], {relativeTo: this.route});\n        return;\n      }\n      if (externalLink) {\n        window.open(externalLink, '_blank');\n      }\n    }\n  }\n}\n","<sci-drawer [@drawerInOut]=\"showDrawer ? 'show' : 'hide'\">\n  <div class=\"details-container\" drawer>\n    \n    <div class=\"header\">\n      <sci-drawer-header [backText]=\"'Iteration'\" (backClick)=\"close()\">\n      </sci-drawer-header>\n      <div class=\"purchase-button\" *ngIf=\"type === 'map'\" (click)=\"openPurchase()\">PURCHASE</div>  \n    </div>\n    \n    <div class=\"body\">\n      <div class=\"details-content\">\n        <h2 class=\"details-title\">{{item.title}}</h2>\n        <div class=\"details-makers\" (click)=\"makersDrawer = true\">\n          <div class=\"makers-text\">\n            <div class=\"makers-label\">Makers:&nbsp;</div>\n            <div>{{makers}}</div>\n          </div>\n          <mat-icon class=\"right\">chevron_right</mat-icon>\n        </div>\n        <div class=\"details-credit\">{{item.credit}}</div>\n\n        <!-- language bar only on maps -->\n        <div *ngIf=\"type === 'map'\" class=\"language-selection\">\n          <div>Languages:&nbsp;</div>\n          <div class=\"language-container\" *ngFor=\"let language of item.translations, index as i\">\n            <div *ngIf=\"i !== 0\">&nbsp;&nbsp;|&nbsp;&nbsp;</div>\n            <div class=\"language option\" [class.active]=\"selectedLanguage === language.abbr_short\"\n              (click)=\"languageSelect(language.abbr_short)\">{{language.native}}</div>\n          </div>\n        </div>\n\n        <p markdown [data]=\"item.description\" class=\"details-description\"></p>\n        <div class=\"details-references\">\n          <div>References</div>\n          <div class=\"reference\" *ngFor=\"let reference of item.references\">\n            <p markdown [data]=\"reference\"></p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"details-image\">\n        <div class=\"container\" [ngClass]=\"{'clickable': item.externalLink || item.videoLink ? true : false}\" (click)=\"redirect()\">\n          <!-- Image -->\n          <img class=\"thumbnail\" [src]=\"item.thumbnail\" alt=\"item image\">\n          <div class=\"icon\" *ngIf=\"item.externalLink\">\n            <mat-icon *ngIf=\"type === 'map'\" class=\"zoom\">zoom_in</mat-icon>\n            <mat-icon *ngIf=\"type === 'macroscope'\" class=\"launch\">launch</mat-icon>\n          </div>\n          <div class=\"icon\" *ngIf=\"item.videoLink\">\n            <mat-icon *ngIf=\"type === 'macroscope'\" class=\"video\">smart_display</mat-icon>\n          </div>\n        </div>\n      </div>\n\n      <h2 class=\"details-title mobile\">{{item.title}}</h2>\n    </div>\n    <!-- Makers drawer -->\n    <sci-drawer [@drawerInOut] *ngIf=\"makersDrawer\">\n      <div drawer>\n        <sci-makers-subdrawer [makers]=\"item.makers\" [title]=\"item.title\" (closed)=\"makersDrawer = false\">\n        </sci-makers-subdrawer>\n      </div>\n    </sci-drawer>\n\n    <ng-content [select]=\"detail\">\n    </ng-content>\n  </div>\n</sci-drawer>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { SharedModule } from '../../shared.module';\nimport { DrawerHeaderModule } from '../drawer-header/drawer-header.module';\nimport { DrawerModule } from '../drawer/drawer.module';\nimport { MakersSubdrawerModule } from '../makers-subdrawer/makers-subdrawer.module';\nimport { PurchaseModalModule } from '../purchase-modal/purchase-modal.module';\nimport { ItemDrawerComponent } from './item-drawer.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    PurchaseModalModule,\n    MarkdownModule,\n    SharedModule,\n    DrawerModule,\n    DrawerHeaderModule,\n    MakersSubdrawerModule,\n    RouterModule\n  ],\n  declarations: [ItemDrawerComponent],\n  exports: [ItemDrawerComponent]\n})\nexport class ItemDrawerModule { }\n"],"names":[],"sourceRoot":"webpack:///"}