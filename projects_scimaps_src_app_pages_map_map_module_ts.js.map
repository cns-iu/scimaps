{"version":3,"file":"projects_scimaps_src_app_pages_map_map_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AACuD;AACqB;AAEyB;AACtD;;;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE,wDAAY;QACvB,OAAO,EAAE;YACP,GAAG,EAAE,0GAA4B;SAClC;QACD,qBAAqB,EAAE,2BAA2B;QAClD,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,iFAAa;aACzB;SACF;KACF;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACnBxB;;GAEG;AAMI,MAAM,YAAY;IAavB,YAAoB,KAAqB,EAAU,MAAc;QAA7C,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAPjE;;WAEG;QACH,oBAAe,GAAG,IAAI,CAAC;IAI8C,CAAC;IAEtE,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACrD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,QAAgB;QAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAChE,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED;;OAEG;IACH,WAAW;;QACT,UAAI,CAAC,YAAY,0CAAE,WAAW,EAAE,CAAC;IACnC,CAAC;;wEApCU,YAAY;0GAAZ,YAAY;QCfzB,qFAA4G;QAA1C,qKAAkB,0BAAsB,IAAC;QACvG,8EACgB;QACpB,4DAAkB;;QAHW,kFAAqB;;;;;;;;;;;;;;;;;;;;;;ACCH;AAES;AACT;AAC2C;AACpB;;AAW/D,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS;0GAPX;YACP,yDAAY;YACZ,iEAAgB;YAChB,+FAAgB;YAChB,2EAAU;SACX;mIAEU,SAAS,mBARL,wDAAY,aAEzB,yDAAY;QACZ,iEAAgB;QAChB,+FAAgB;QAChB,2EAAU","sources":["./projects/scimaps/src/app/pages/map/map-routing.module.ts","./projects/scimaps/src/app/pages/map/map.component.ts","./projects/scimaps/src/app/pages/map/map.component.html","./projects/scimaps/src/app/pages/map/map.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TileComponent } from '../../shared/components/tile/tile.component';\n\nimport { MapMacroscopeResolverService } from '../../shared/services/map-macroscope-resolver.service';\nimport { MapComponent } from './map.component';\n\nconst routes: Routes = [\n  {\n    path: ':iteration/:sequence',\n    component: MapComponent,\n    resolve: {\n      map: MapMacroscopeResolverService,\n    },\n    runGuardsAndResolvers: 'paramsOrQueryParamsChange',\n    children: [\n      {\n        path: 'detail',\n        component: TileComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MapRoutingModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { MapMacroscopeItem } from '../../core/models/discover-item';\n\n\n/**\n * Component to displaying individual map items\n */\n@Component({\n  selector: 'sci-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit, OnDestroy {\n  /**\n   * The current item displayed\n   */\n  selectedItem!: MapMacroscopeItem;\n\n  /**\n   * Selected language\n   */\n  currentLanguage = 'en';\n\n  private subscription?: Subscription;\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe((data) => {\n      this.selectedItem = data.map;\n    });\n  }\n\n  /**\n   * Changes selected language and navigates to new language route\n   * @param language selected language\n   */\n  changeLanguage(language: string): void {\n    const iteration = this.route.snapshot.paramMap.get('iteration');\n    const sequence = this.route.snapshot.paramMap.get('sequence');\n    this.router.navigate(['/', 'map', iteration, sequence], { queryParams: {lang: language} });\n  }\n\n  /**\n   * Unsubscribe from Observables\n   */\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","<sci-item-drawer class=\"map\" [item]=\"selectedItem\" [type]=\"'map'\" (languageChange)=\"changeLanguage($event)\">\n    <router-outlet detail>\n    </router-outlet>\n</sci-item-drawer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MapRoutingModule } from './map-routing.module';\nimport { MapComponent } from './map.component';\nimport { ItemDrawerModule } from '../../shared/components/item-drawer/item-drawer.module';\nimport { TileModule } from '../../shared/components/tile/tile.module';\n\n@NgModule({\n  declarations: [MapComponent],\n  imports: [\n    CommonModule,\n    MapRoutingModule,\n    ItemDrawerModule,\n    TileModule\n  ]\n})\nexport class MapModule { }\n"],"names":[],"sourceRoot":"webpack:///"}