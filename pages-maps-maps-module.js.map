{"version":3,"sources":["./src/app/pages/maps/maps-body-resolver.service.ts","/home/travis/build/cns-iu/scimaps/website/node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","./src/app/shared/components/purchase-modal/purchase-modal.component.ts","./src/app/shared/components/purchase-modal/purchase-modal.component.html","/home/travis/build/cns-iu/scimaps/website/node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","./src/app/pages/maps/maps.module.ts","./src/app/pages/maps/maps-resolver.service.ts","./src/app/pages/maps/maps-routing.module.ts","./src/app/shared/components/item-drawer/item-drawer.component.ts","./src/app/shared/components/item-drawer/item-drawer.component.html","./src/app/shared/components/item-drawer/item-drawer.module.ts","./src/app/pages/maps/maps.component.ts","./src/app/pages/maps/maps.component.html","./src/app/shared/components/purchase-modal/purchase-modal.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGL;;;;AAQ/B,MAAM,uBAAuB;IAElC,YAAoB,OAAuB,EAAU,MAAc;QAA/C,YAAO,GAAP,OAAO,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAExE,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC/D,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAiB,oBAAoB,CAAC,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACrF,CAAC;;8FANU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;6FAEP,uBAAuB;cAHnC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgG;AACqC;AACvE;AACW;AACF;AACK;AACyC;AACtF;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACQ;AACP;AACQ;AACC;AACK;AACvD,kCAAkC,2EAAmB;AACrD,8BAA8B,qBAAqB;AACnD,mCAAmC,sBAAsB;AACzD,8BAA8B,qBAAqB;AACnD,mCAAmC,sBAAsB;AACzD,uBAAuB,qBAAqB;AAC5C,4BAA4B,sBAAsB;AAClD,+BAA+B,qBAAqB;AACpD,oCAAoC,sBAAsB;AAC1D;AACA,oEAAoE,mEAAmE;AACvI,2BAA2B,+DAAwB,EAAE,mMAAmM,mQAAmQ,gDAAgD,wEAAiC,GAAG;AAC/kB;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,mBAAmB,OAAO,mDAAK,2BAA2B;AAC1D,2BAA2B,OAAO,mDAAK,EAAE;AACzC;AACA,uDAAuD,mEAA4B;AACnF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,UAAU;AACf,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAK;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4DAAc;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8EAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oFAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,iC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D,+BAA+B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,mBAAmB;AAC3K,mBAAmB,+DAAwB,EAAE,oEAAoE,6BAA6B,EAAE;AAChJ;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,mBAAmB,OAAO,oDAAM,EAAE;AAClC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,wBAAwB,EAAE,EAAE,GAAG;AAC3F,kBAAkB,oDAAM;AACxB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,wBAAwB,kFAAoB;AAC5C;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,wBAAwB,kFAAoB;AAC5C;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,gBAAgB,mFAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAsC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAsC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAS;AACzB,0BAA0B,gEAAS,MAAM,gEAAS;AAClD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"pages-maps-maps-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { ContentService } from '../../shared/services/content.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapsBodyResolverService implements Resolve<{body: string}> {\n\n  constructor(private content: ContentService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<{body: string}> | Observable<never> {\n    return this.content.getContent<{body: string}>('site/whatIsAMap.md').pipe(take(1));\n  }\n}\n","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputMixinBase {\n    constructor(_elementRef, _platform, \n    /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    let el = event.target;\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 9, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { Component, HostBinding } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { FormControl, Validators } from '@angular/forms';\n\nexport interface PurchaseFormInfo {\n  firstName: string;\n  lastName: string;\n  shipAddress: string;\n  city: string;\n  state: string;\n  zip: string;\n  email: string;\n  phone: string;\n}\n\n@Component({\n  selector: 'sci-purchase-modal',\n  templateUrl: './purchase-modal.component.html',\n  styleUrls: ['./purchase-modal.component.scss']\n})\nexport class PurchaseModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'sci-purchase-modal';\n\n  firstName = new FormControl('', [Validators.required]);\n  lastName = new FormControl('', [Validators.required]);\n  address = new FormControl('', [Validators.required]);\n  city = new FormControl('', [Validators.required]);\n  state = new FormControl('', [Validators.required]);\n  zip = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.required, Validators.email]);\n  phone = new FormControl('', [Validators.required]);\n\n  /**\n   * Whether the confirmation screen has been reached\n   */\n  confirmation = false;\n\n  /**\n   * Current form inputs\n   */\n  currentInfo: PurchaseFormInfo = {\n    firstName: '',\n    lastName: '',\n    shipAddress: '',\n    city: '',\n    state: '',\n    zip: '',\n    email: '',\n    phone: '',\n  };\n\n  /**\n   * Email link\n   */\n  mailLink = '';\n\n  /**\n   * Shipping info (body of email)\n   */\n  shipInfo = '';\n\n  /**\n   * Where the email will be sent\n   */\n  receivingEmail = 'katy@indiana.edu';\n\n  /**\n   * State options\n   */\n  states = [\n    'Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia',\n    'Federated States of Micronesia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n    'Louisiana', 'Maine', 'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana',\n    'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Northern Mariana Islands',\n    'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas',\n    'Utah', 'Vermont', 'Virgin Island', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\n  ];\n\n\n  constructor(public dialogRef: MatDialogRef<PurchaseModalComponent>) { }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Opens the confirmation screen when send button is clicked\n   */\n  buttonClickSend(): void {\n    if (this.allValid()) {\n      this.confirmation = true;\n    }\n  }\n\n  /**\n   * Updates the current form inputs (excluding state)\n   * @param input the input event\n   * @param key Key to be updated\n   */\n  change(target: EventTarget | null, key: string): void {\n    const inputTarget = target as HTMLInputElement;\n    this.currentInfo = target ? { ...this.currentInfo, [key]: inputTarget.value } : this.currentInfo;\n    this.updateMailLink();\n  }\n\n  /**\n   * Updates the selected state\n   * @param event Selected state\n   */\n  stateChange(event: MatSelectChange): void {\n    this.currentInfo = { ...this.currentInfo, state: event.value };\n    this.updateMailLink();\n  }\n\n  /**\n   * Updates ship info portion of form\n   * @param event Input event\n   */\n  updateShipInfo(target: EventTarget | null): void {\n    const inputTarget = target as HTMLTextAreaElement;\n    this.shipInfo = target ? inputTarget.value.split('\\n').join('%0D%0A') : this.shipInfo;\n    this.updateMailLink();\n  }\n\n  /**\n   * Updates mail link\n   */\n  updateMailLink(): void {\n    this.mailLink = `mailto:${this.receivingEmail}?subject=Map%20Purchase&body=`;\n    const mailName = `Name: ${this.currentInfo.firstName} ${this.currentInfo.lastName}`;\n    const mailAddress = `Address: ${this.currentInfo.shipAddress}, ${this.currentInfo.city}, ${this.currentInfo.state}, ${this.currentInfo.zip}`;\n    const mailEmail = `Email: ${this.currentInfo.email}`;\n    const mailPhone = `Phone: ${this.currentInfo.phone}`;\n    this.mailLink = this.mailLink.concat(\n      [mailName, mailAddress, mailEmail, mailPhone].join('%0D%0A')\n    ).concat(`%0D%0A%0D%0A${this.shipInfo}`);\n  }\n\n  allValid(): boolean {\n      if (this.email.hasError('email') || this.email.hasError('required') || this.firstName.hasError('required') ||\n      this.lastName.hasError('required') || this.address.hasError('required') || this.city.hasError('required') ||\n      this.zip.hasError('required') || this.phone.hasError('required') ||\n      this.shipInfo === '') {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  getErrorMessage(): string {\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n}\n","<div class=\"purchase-modal wrapper\">\n  <div class=\"container\">\n    <mat-dialog-content *ngIf=\"!confirmation\" class=\"screen1\">\n      <div class=\"purchase-info\">\n        <h4 class=\"purchase-title\">Purchase Map(s)</h4>\n        <p class=\"description\">\n          Most exhibit maps can be purchased individually. Maps are 30\" x 24\" (76cm x 61cm). Different Pricing options are available.\n        </p>\n        <ul class=\"purchase-options\">\n          <li>Inkjet print: $45 ea*</li>\n          <li>Premium archival print: $100 ea*</li>\n          <li>Iteration poster sets (inkjet): $150 per iteration* or $950 for all 20 posters*</li>\n        </ul>\n        <p>*plus shipping</p>\n        <p class=\"instructions\">\n          Complete and submit the form. You will be contacted by a staff member to complete your order and verify all information.\n        </p>\n      </div>\n\n      <div class=\"purchase-form-container\">\n        <div class=\"purchase-form\">\n          <div class=\"name-inputs\">\n            <mat-form-field class=\"first-name\" appearance=\"fill\">\n              <mat-label >First Name</mat-label>\n              <input class=\"first-name-input\" (change)=\"change($event.target, 'firstName')\" placeholder=\"Enter first name\" [formControl]=\"firstName\" matInput>\n            </mat-form-field>\n            <mat-form-field class=\"last-name\" appearance=\"fill\">\n              <mat-label>Last Name</mat-label>\n              <input class=\"last-name-input\" (change)=\"change($event.target, 'lastName')\" placeholder=\"Enter last name\" [formControl]=\"lastName\" matInput>\n            </mat-form-field>\n          </div>\n          <div class=\"shipping-input\">\n            <mat-form-field class=\"shipping-address\" appearance=\"fill\">\n              <mat-label>Shipping Address</mat-label>\n              <input class=\"shipping-address-input\" (change)=\"change($event.target, 'shipAddress')\" placeholder=\"Enter shipping address\" [formControl]=\"address\" matInput>\n            </mat-form-field>\n          </div>\n          <div class=\"address-inputs\">\n            <mat-form-field class=\"city\" appearance=\"fill\">\n              <mat-label>City</mat-label>\n              <input class=\"city-input\" (change)=\"change($event.target, 'city')\" placeholder=\"Enter city\" [formControl]=\"city\" matInput>\n            </mat-form-field>\n            <mat-form-field class=\"state\" appearance=\"fill\">\n              <mat-label>State</mat-label>\n              <mat-select class=\"state-input\" (selectionChange)=\"stateChange($event)\" [formControl]=\"state\">\n                <mat-option *ngFor=\"let state of states\" [value]=\"state\">\n                  {{state}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"zip\" appearance=\"fill\">\n              <mat-label>Zip</mat-label>\n              <input class=\"zip-input\" (change)=\"change($event.target, 'zip')\" placeholder=\"xxxxx\" [formControl]=\"zip\" matInput>\n            </mat-form-field>\n          </div>\n          <div class=\"contact-inputs\">\n            <mat-form-field class=\"email\" appearance=\"fill\">\n              <mat-label>Email</mat-label>\n              <input class=\"email-input\" (change)=\"change($event.target, 'email')\" placeholder=\"Enter email address\" [formControl]=\"email\" matInput>\n              <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"phone\" appearance=\"fill\">\n              <mat-label>Phone</mat-label>\n              <input class=\"phone-input\" (change)=\"change($event.target, 'phone')\" placeholder=\"xxx-xxx-xxxx\" [formControl]=\"phone\" matInput>\n            </mat-form-field>\n          </div>\n          <div class=\"shipping-info\">\n            <div class=\"shipping-info-label\">Map name(s) and preferred shipping method</div>\n            <textarea (change)=\"updateShipInfo($event.target)\" class=\"textarea\" matInput></textarea>\n          </div>\n          <div class=\"button-container\">\n            <button class=\"cancel button\" (click)=\"close()\">CANCEL</button>\n            <a class=\"send button\" [class.disabled]=\"!allValid()\" (click)=\"buttonClickSend()\" href=\"{{mailLink}}\">SEND</a>\n          </div>\n        </div>\n      </div>\n    </mat-dialog-content>\n\n    <mat-dialog-content *ngIf=\"confirmation\" class=\"screen2\">\n      <div class=\"content\">\n        <h1 class=\"confirmation-header\">\n          Thank you for your order!\n        </h1>\n        <p class=\"confirmation-text\">\n          A staff member will contact you to complete the payment process and confirm details.\n        </p>\n        <button class=\"button\" (click)=\"close()\">DONE</button>\n      </div>\n    </mat-dialog-content>\n  </div>\n</div>","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MarkdownModule } from 'ngx-markdown';\n\nimport { MapsRoutingModule } from './maps-routing.module';\nimport { MapsComponent } from './maps.component';\nimport { DiscoverListingModule } from '../../shared/components/discover-listing/discover-listing.module';\nimport { ItemDrawerModule } from '../../shared/components/item-drawer/item-drawer.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CarouselModule } from '../../shared/components/carousel/carousel.module';\n\n\n@NgModule({\n  declarations: [MapsComponent],\n  imports: [\n    CommonModule,\n    MapsRoutingModule,\n    DiscoverListingModule,\n    MarkdownModule,\n    MatIconModule,\n    CarouselModule,\n    ItemDrawerModule\n  ]\n})\nexport class MapsModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { DiscoverItem } from '../../core/models/discover-item';\nimport { ContentService } from '../../shared/services/content.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapsResolverService implements Resolve<DiscoverItem[]> {\n\n  constructor(private content: ContentService, private router: Router) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<DiscoverItem[]> | Observable<never> {\n    return this.content.getIndex<DiscoverItem>('app-maps').pipe(take(1));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MapsBodyResolverService } from './maps-body-resolver.service';\nimport { MapsResolverService } from './maps-resolver.service';\nimport { MapsComponent } from './maps.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: MapsComponent,\n  resolve: {\n    maps: MapsResolverService,\n    body: MapsBodyResolverService\n  }\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MapsRoutingModule { }\n","import { Component, Input, HostBinding, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MapItem } from '../../../core/models/discover-item';\nimport { PurchaseModalComponent } from '../purchase-modal/purchase-modal.component';\n\n@Component({\n  selector: 'sci-item-drawer',\n  templateUrl: './item-drawer.component.html',\n  styleUrls: ['./item-drawer.component.scss']\n})\nexport class ItemDrawerComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'sci-item-drawer';\n\n  /**\n   * Item to be displayed in the drawer\n   */\n  @Input() item: MapItem = {\n    title: 'Sample Map Item',\n    makers: ['Homer Simpson', 'Elon Musk'],\n    location: 'Springfield',\n    credit: 'Credit line text',\n    year: '2000',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non dui euismod mauris faucibus euismod non lacinia quam. Morbi sit amet placerat dui. Sed ut dolor efficitur, consequat augue sed, pharetra orci. Nulla vitae mauris nisi. Aenean orci ipsum, scelerisque et arcu quis, molestie efficitur dui. Curabitur enim lacus, vehicula at arcu id, sagittis posuere est. Maecenas laoreet est eget tristique interdum. Fusce consequat, nisl ac bibendum facilisis, tellus nulla blandit orci, quis dignissim est mi ac justo. Pellentesque ultrices blandit diam quis pretium. Suspendisse ut ante in enim consequat semper id consectetur arcu. Proin ultricies vestibulum nulla sit amet.',\n    references: [\n      'Reference 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit.' +\n        'Fusce non dui euismod mauris faucibus euismod non lacinia quam.',\n      'Reference 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit.' +\n        'Fusce non dui euismod mauris faucibus euismod non lacinia quam.',\n      'Reference 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit.' +\n        'Fusce non dui euismod mauris faucibus euismod non lacinia quam.'\n    ],\n    thumbnail: 'assets/maps/maps-2019/rose.jpg'\n  };\n\n  /**\n   * Emitted when the drawer closes\n   */\n  @Output() closeDrawer = new EventEmitter();\n\n  /**\n   * Emits the selected language when the language changes\n   */\n  @Output() languageChange = new EventEmitter<string>();\n\n  /**\n   * Currently selected language\n   */\n  selectedLanguage = 'English';\n\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Combines the maker names\n   */\n  get makers(): string {\n    return this.item.makers.join(', ');\n  }\n\n  /**\n   * Closes the drawer\n   */\n  close(): void {\n    this.closeDrawer.emit();\n  }\n\n  /**\n   * Sets selectedLanguage to selected language and emits the new language\n   * @param language The language selected\n   */\n  languageSelect(language: string): void {\n    this.selectedLanguage = language;\n    this.languageChange.emit(language);\n  }\n\n  /**\n   * Opens purchase modal\n   */\n  openPurchase(): void {\n    this.dialog.open(PurchaseModalComponent, {\n      width: window.innerWidth <= 768 ? '100%' : '738px'\n    });\n  }\n}\n","<div class=\"details-container\">\n  <div class=\"purchase-header\">\n    <div class=\"back-button\" (click)=\"close()\">\n      <mat-icon class=\"back-icon\">chevron_left</mat-icon>\n      <div>BACK</div>\n    </div>\n    <div class=\"purchase-button\" (click)=\"openPurchase()\">PURCHASE</div>\n  </div>\n\n  <div class=\"body\">\n    <div class=\"details-content\">\n      <h2 class=\"details-title\">{{item.title}}</h2>\n      <div class=\"details-makers\">\n        <div class=\"makers-label\">Makers:&nbsp;</div>\n        <div>{{makers}}</div>\n      </div>\n      <div class=\"details-location\">{{item.location}}</div>\n      <div class=\"details-credit\">{{item.credit}}</div>\n      <div class=\"language-selection\">\n        <div>Languages:&nbsp;</div>\n        <div class=\"language option\" [class.active]=\"selectedLanguage === 'English'\" (click)=\"languageSelect('English')\">English&nbsp;</div>|\n        <div class=\"language option\" [class.active]=\"selectedLanguage === 'Chinese'\" (click)=\"languageSelect('Chinese')\">&nbsp;中文&nbsp;</div>|\n        <div class=\"language option\" [class.active]=\"selectedLanguage === 'German'\" (click)=\"languageSelect('German')\">&nbsp;Deutsch</div>\n      </div>\n      <div class=\"details-description\">{{item.description}}</div>\n      <div class=\"details-references\">\n        <div>References</div>\n        <div class=\"reference\" *ngFor=\"let reference of item.references\">{{reference}}</div>\n      </div>\n    </div>\n\n    <div class=\"details-image\">\n      <img class=\"thumbnail\" [src]=\"item.thumbnail\" alt=\"item image\">\n      <mat-icon class=\"zoom icon\">zoom_in</mat-icon>\n    </div>\n\n    <h2 class=\"details-title mobile\">{{item.title}}</h2>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { ItemDrawerComponent } from './item-drawer.component';\nimport { PurchaseModalModule } from '../purchase-modal/purchase-modal.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    PurchaseModalModule\n  ],\n  declarations: [ItemDrawerComponent],\n  exports: [ItemDrawerComponent]\n})\nexport class ItemDrawerModule { }\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { DiscoverItem, ThumbnailLink } from '../../core/models/discover-item';\n\n\n@Component({\n  selector: 'sci-maps',\n  templateUrl: './maps.component.html',\n  styleUrls: ['./maps.component.scss']\n})\nexport class MapsComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'sci-maps';\n\n  /** Gives details-open class when showDrawer is true */\n  @HostBinding('class.details-open') showDrawer = false;\n\n  showModal = false;\n  itemsToDisplay = 3;\n  highlightBody = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non dui euismod mauris faucibus euismod non lacinia quam. Morbi sit amet placerat dui. Sed ut dolor efficitur, consequat augue sed, pharetra orci. Nulla vitae mauris nisi. Aenean orci ipsum, scelerisque et arcu quis, molestie efficitur dui. Curabitur enim lacus, vehicula at arcu id, sagittis posuere est. Maecenas laoreet est eget tristique interdum. Fusce consequat, nisl ac bibendum facilisis, tellus nulla blandit orci, quis dignissim est mi ac justo. Pellentesque ultrices blandit diam quis pretium. Suspendisse ut ante in enim consequat semper id consectetur arcu. Proin ultricies vestibulum nulla sit amet.';\n  discoverItems: DiscoverItem[] = [\n    {\n      title: 'X. The Future of Science Mapping',\n      body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non dui euismod mauris faucibus euismod non lacinia quam. Morbi sit amet placerat dui. Sed ut dolor efficitur, consequat augue sed, pharetra orci. Nulla vitae mauris nisi. Aenean orci ipsum, scelerisque et arcu quis, molestie efficitur dui. Curabitur enim lacus, vehicula at arcu id, sagittis posuere est. Maecenas laoreet est eget tristique interdum. Fusce consequat, nisl ac bibendum facilisis, tellus nulla blandit orci, quis dignissim est mi ac justo.',\n      thumbnails: [\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        }\n      ],\n      slug: 'maps-2019',\n      directory: 'maps'\n    },\n    {\n      title: 'VIII. Science Maps Showing Trends & Dynamics (2013)',\n      body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non dui euismod mauris faucibus euismod non lacinia quam. Morbi sit amet placerat dui. Sed ut dolor efficitur, consequat augue sed, pharetra orci. Nulla vitae mauris nisi. Aenean orci ipsum, scelerisque et arcu quis, molestie efficitur dui. Curabitur enim lacus, vehicula at arcu id, sagittis posuere est. Maecenas laoreet est eget tristique interdum. Fusce consequat, nisl ac bibendum facilisis, tellus nulla blandit orci, quis dignissim est mi ac justo.',\n      thumbnails: [\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        }\n      ],\n      slug: 'maps-2019',\n      directory: 'maps'\n    },\n    {\n      title: 'VIII. Science Maps for Kids (2012)',\n      body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non dui euismod mauris faucibus euismod non lacinia quam. Morbi sit amet placerat dui. Sed ut dolor efficitur, consequat augue sed, pharetra orci. Nulla vitae mauris nisi. Aenean orci ipsum, scelerisque et arcu quis, molestie efficitur dui. Curabitur enim lacus, vehicula at arcu id, sagittis posuere est. Maecenas laoreet est eget tristique interdum. Fusce consequat, nisl ac bibendum facilisis, tellus nulla blandit orci, quis dignissim est mi ac justo.',\n      thumbnails: [\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        }\n      ],\n      slug: 'maps-2019',\n      directory: 'maps'\n    },\n    {\n      title: 'VII.',\n      body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non dui euismod mauris faucibus euismod non lacinia quam. Morbi sit amet placerat dui. Sed ut dolor efficitur, consequat augue sed, pharetra orci. Nulla vitae mauris nisi. Aenean orci ipsum, scelerisque et arcu quis, molestie efficitur dui. Curabitur enim lacus, vehicula at arcu id, sagittis posuere est. Maecenas laoreet est eget tristique interdum. Fusce consequat, nisl ac bibendum facilisis, tellus nulla blandit orci, quis dignissim est mi ac justo.',\n      thumbnails: [\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        }\n      ],\n      slug: 'maps-2019',\n      directory: 'maps'\n    },\n    {\n      title: 'VI.',\n      body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce non dui euismod mauris faucibus euismod non lacinia quam. Morbi sit amet placerat dui. Sed ut dolor efficitur, consequat augue sed, pharetra orci. Nulla vitae mauris nisi. Aenean orci ipsum, scelerisque et arcu quis, molestie efficitur dui. Curabitur enim lacus, vehicula at arcu id, sagittis posuere est. Maecenas laoreet est eget tristique interdum. Fusce consequat, nisl ac bibendum facilisis, tellus nulla blandit orci, quis dignissim est mi ac justo.',\n      thumbnails: [\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        },\n        {\n          title: '',\n          link: 'www.google.com',\n          image: 'rose.jpg'\n        }\n      ],\n      slug: 'maps-2019',\n      directory: 'maps'\n    }\n  ];\n  displayItems: DiscoverItem[] = [];\n  highlightCarouselItems: ThumbnailLink[] = [\n    {\n      image: 'assets/images/benches.jpg',\n      title: 'Map 1 Description.',\n      link: 'www.google.com'\n    },\n    {\n      image: 'assets/images/bridge.jpg',\n      title: 'Map 2 Description.',\n      link: 'www.google.com'\n    },\n    {\n      image: 'assets/images/flower.jpg',\n      title: 'Map 3 Description.',\n      link: 'www.google.com'\n    },\n    {\n      image: 'assets/images/garden.jpg',\n      title: 'Map 4 Description.',\n      link: 'www.google.com'\n    }\n  ];\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data) => {\n      this.highlightBody = data.body.body;\n      this.discoverItems = data.maps;\n      this.highlightCarouselItems = this.discoverItems\n        .reduce((acc, item) => {\n          const thumbs = item.thumbnails;\n          const randomThumbnailIndex = Math.round(Math.random() * (thumbs.length - 1));\n          return acc.concat(thumbs[randomThumbnailIndex]);\n        }, [] as ThumbnailLink[]);\n\n      this.updateDisplayItems();\n    });\n  }\n\n  updateDisplayItems(): void {\n    const items: DiscoverItem[] = [...this.discoverItems];\n    this.displayItems = items.splice(0, this.itemsToDisplay);\n  }\n\n  moreMaps(): boolean {\n    return this.itemsToDisplay < this.discoverItems.length;\n  }\n\n  showMoreMaps(): void {\n    this.itemsToDisplay = this.itemsToDisplay + 3;\n    this.updateDisplayItems();\n  }\n\n  /**\n   * Opens the details drawer\n   */\n  openDetails(): void {\n    this.showDrawer = true;\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    window.onscroll = () => {\n      window.scrollTo(scrollLeft, scrollTop);\n    };\n    const drawer = document.getElementsByClassName('details-drawer')[0] as HTMLElement;\n    if (window.innerWidth > 640) {\n      document.body.style.overflow = 'hidden';\n      document.body.style.marginRight = '1rem';\n      drawer.style.width = '100%';\n    }\n  }\n\n  /**\n   * Closes the details drawer\n   */\n  closeDetails(): void {\n    this.showDrawer = false;\n    window.onscroll = () => {};\n    const drawer = document.getElementsByClassName('details-drawer')[0] as HTMLElement;\n    if (window.innerWidth > 640) {\n      document.body.style.overflow = 'unset';\n      document.body.style.marginRight = '0';\n      drawer.style.width = 'calc(100% + 1rem)';\n    }\n  }\n}\n","<sci-item-drawer class=\"details-drawer\" [class.hidden]=\"!showDrawer\" (closeDrawer)=\"closeDetails()\"></sci-item-drawer>\n\n<h2 class=\"header\">Maps</h2>\n<div *ngIf=\"!showModal\" class=\"highlight-content\">\n  <p markdown [data]=\"highlightBody\" class=\"highlight-body\"></p>\n  <div class=\"carousel-container\">\n    <sci-carousel class=\"carousel\">\n      <sci-carousel-item *ngFor=\"let carouselItem of highlightCarouselItems\">\n        <div class=\"carousel-item\">\n          <img class=\"carousel-image\" [src]=\"carouselItem.image\" [alt]=\"carouselItem.image.split('/')[3]\">\n          <div class=\"carousel-image-title\">{{ carouselItem.title }}</div>\n        </div>\n      </sci-carousel-item>\n    </sci-carousel>\n  </div>\n</div>\n\n<h2 class=\"header discover-maps\">Discover Maps</h2>\n\n<sci-discover-listing class=\"discover-item\" *ngFor=\"let item of displayItems\" [discoverItem]=\"item\" [type]=\"'maps'\" (openDrawer)=\"openDetails()\"></sci-discover-listing>\n\n<button *ngIf=\"moreMaps()\" class=\"more-button\" (click)=\"showMoreMaps()\">Show More Maps</button>\n<div *ngIf=\"!showModal\" class=\"mobile-button\" (click)=\"showModal = true;\">\n  Discover Maps\n  <mat-icon class=\"mobile-icon\">chevron_right</mat-icon>\n</div>\n\n<div class=\"fullscreen-modal\" *ngIf=\"showModal\">\n  <div class=\"modal-header\">\n    <mat-icon class=\"mobile-icon\" (click)=\"showModal = false;\">chevron_left</mat-icon>\n    <div class=\"mobile-title\"><h3>Maps</h3></div>\n  </div>\n\n  <sci-carousel class=\"maps-carousel\">\n    <sci-carousel-item class=\"mobile-carousel-item\" *ngFor=\"let discoverItem of discoverItems\">\n      <sci-discover-listing [discoverItem]=\"discoverItem\" [type]=\"'maps'\" (openDrawer)=\"openDetails()\"></sci-discover-listing>\n    </sci-carousel-item>\n  </sci-carousel>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PurchaseModalComponent } from './purchase-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [PurchaseModalComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSelectModule,\n    ReactiveFormsModule\n  ],\n  exports: [PurchaseModalComponent]\n})\nexport class PurchaseModalModule { }\n"],"sourceRoot":"webpack:///"}