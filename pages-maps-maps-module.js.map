{"version":3,"sources":["./src/app/pages/maps/maps-body-resolver.service.ts","./src/app/pages/maps/maps.module.ts","./src/app/pages/maps/maps-resolver.service.ts","./src/app/pages/maps/maps-routing.module.ts","./src/app/pages/maps/maps.component.ts","./src/app/pages/maps/maps.component.html"],"names":[],"mappings":"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","file":"pages-maps-maps-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { isHttp } from '../../constants/utils';\nimport { ContentService } from '../../shared/services/content.service';\n\n\ninterface MapsBody {\n  body: string;\n  carousel: {\n    title: string;\n    sm: string;\n    lg: string;\n  }[];\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapsBodyResolverService implements Resolve<MapsBody> {\n\n  directory = 'assets/content/site/maps';\n  constructor(private content: ContentService, private router: Router) { }\n\n  resolve(): Observable<MapsBody> | Observable<never> {\n    return this.content.getContent<MapsBody>('site/maps/whatIsAMap.md').pipe(\n      take(1),\n      map((response) => {\n        return this.updatePaths(response);\n      })\n    );\n  }\n\n  updatePaths(body: MapsBody): MapsBody {\n    // Carousel\n    const { carousel } = body;\n    if (carousel && Array.isArray(carousel)) {\n      carousel.forEach((image) => {\n        if (image.lg && !isHttp(image.lg)) {\n          image.lg = `${this.directory}/${image.lg}`;\n        }\n        if (image.sm && !isHttp(image.sm)) {\n          image.sm = `${this.directory}/${image.sm}`;\n        }\n      });\n      body.carousel = carousel;\n    }\n    return body;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MarkdownModule } from 'ngx-markdown';\n\nimport { MapsRoutingModule } from './maps-routing.module';\nimport { MapsComponent } from './maps.component';\nimport { DiscoverListingModule } from '../../shared/components/discover-listing/discover-listing.module';\nimport { ItemDrawerModule } from '../../shared/components/item-drawer/item-drawer.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CarouselModule } from '../../shared/components/carousel/carousel.module';\nimport { DrawerModule } from '../../shared/components/drawer/drawer.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { DrawerHeaderModule } from '../../shared/components/drawer-header/drawer-header.module';\n\n\n@NgModule({\n  declarations: [MapsComponent],\n  imports: [\n    CommonModule,\n    MapsRoutingModule,\n    DiscoverListingModule,\n    MarkdownModule,\n    MatIconModule,\n    CarouselModule,\n    ItemDrawerModule,\n    DrawerModule,\n    SharedModule,\n    DrawerHeaderModule\n  ]\n})\nexport class MapsModule { }\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { DiscoverItem } from '../../core/models/discover-item';\nimport { ContentService } from '../../shared/services/content.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapsResolverService implements Resolve<DiscoverItem[]> {\n\n  result!: Observable<DiscoverItem[]> | Observable<never>;\n  cached = false;\n  constructor(private content: ContentService) { }\n\n  resolve(): Observable<DiscoverItem[]> | Observable<never> {\n   if (!this.cached) {\n     this.result = this.content.getIndex<DiscoverItem>('app-maps').pipe(\n      take(1)\n    );\n     this.cached = true;\n   }\n   return this.result;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MapsBodyResolverService } from './maps-body-resolver.service';\nimport { MapsResolverService } from './maps-resolver.service';\nimport { MapsComponent } from './maps.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: MapsComponent,\n  resolve: {\n    maps: MapsResolverService,\n    body: MapsBodyResolverService\n  },\n  runGuardsAndResolvers: 'pathParamsOrQueryParamsChange',\n  children: [\n    {\n      path: '',\n      loadChildren: () => import('../map/map.module').then(m => m.MapModule),\n      data: { animation: 'Map', type: 'map'}\n    }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MapsRoutingModule { }\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { drawerInOut } from '../../constants/drawer.animations';\nimport { DiscoverItem } from '../../core/models/discover-item';\n\n\n\n@Component({\n  selector: 'sci-maps',\n  templateUrl: './maps.component.html',\n  styleUrls: ['./maps.component.scss'],\n  animations: [drawerInOut]\n})\nexport class MapsComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'sci-maps';\n\n  showModal = false;\n  highlightBody = '';\n  discoverItems: DiscoverItem[] = [];\n  displayItems: DiscoverItem[] = [];\n  carouselItems: {sm: string, lg: string, title: string}[] = [];\n  displayLimit = 3;\n  showAllItems = false;\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data) => {\n      const {body, maps} = data;\n      if (body) {\n        this.highlightBody = body.body;\n      }\n      this.discoverItems = maps;\n      if (body.carousel) {\n        this.carouselItems = body.carousel;\n      }\n      this.updateDisplayItems();\n    });\n  }\n\n  updateDisplayItems(): void {\n    const items: DiscoverItem[] = [...this.discoverItems];\n    this.displayItems = items;\n  }\n}\n","<div class=\"maps-container\">\n  <h2 class=\"header\">Maps</h2>\n  <div class=\"highlight-content\">\n    <p markdown [data]=\"highlightBody\" class=\"highlight-body\"></p>\n    <div class=\"carousel-container\">\n      <sci-carousel class=\"carousel\">\n        <sci-carousel-item *ngFor=\"let carouselItem of carouselItems\">\n          <div class=\"carousel-item\" *sciBreakpoint=\"'desktop'\">\n            <img [src]=\"carouselItem.lg\" class=\"carousel-image\" [alt]=\"carouselItem.lg.split('/')[3]\">\n            <div class=\"carousel-image-title\">{{ carouselItem.title }}</div>\n          </div>\n          <div class=\"carousel-item\" *sciBreakpoint=\"'desktop-'\">\n            <img [src]=\"carouselItem.sm\" class=\"carousel-image\" [alt]=\"carouselItem.sm.split('/')[3]\">\n            <div class=\"carousel-image-title\">{{ carouselItem.title }}</div>\n          </div>\n        </sci-carousel-item>\n      </sci-carousel>\n    </div>\n  </div>\n\n  <!-- desktop -->\n  <h2 class=\"header discover-maps\">Discover Maps</h2>\n  <ng-container *ngFor=\"let item of displayItems; let i = index;\">\n    <sci-discover-listing id=\"map-{{item.iteration}}\" *ngIf=\"showAllItems || i < displayLimit\"\n      class=\"discover-item maps\" [discoverItem]=\"item\" [type]=\"'maps'\"></sci-discover-listing>\n  </ng-container>\n  <button *ngIf=\"!showAllItems\" class=\"more-button\" (click)=\"showAllItems = true\">Show More Maps</button>\n\n  <!-- mobile -->\n  <div class=\"mobile-button\" (click)=\"showModal = true;\">\n    Discover Maps\n    <mat-icon class=\"mobile-icon\">chevron_right</mat-icon>\n  </div>\n\n  <sci-drawer [@drawerInOut] *ngIf=\"showModal\" class=\"sci-drawer\">\n    <div class=\"drawer-container\" drawer>\n      <sci-drawer-header [title]=\"'Maps'\" (backClick)=\"showModal = false\">\n      </sci-drawer-header>\n      <div class=\"drawer-content\">\n        <sci-carousel class=\"maps-carousel\">\n          <sci-carousel-item class=\"mobile-carousel-item\" *ngFor=\"let discoverItem of discoverItems\">\n            <sci-discover-listing [discoverItem]=\"discoverItem\" [type]=\"'maps'\"></sci-discover-listing>\n          </sci-carousel-item>\n        </sci-carousel>\n      </div>\n    </div>\n  </sci-drawer>\n</div>\n\n<router-outlet></router-outlet>"],"sourceRoot":"webpack:///"}