{"version":3,"file":"default-projects_scimaps_src_app_pages_maker-videos_maker-videos-resolver_service_ts-projects-db45da.js","mappings":"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","sources":["./projects/scimaps/src/app/pages/maker-videos/maker-video-resolver.service.ts","./projects/scimaps/src/app/pages/maker-videos/maker-videos-resolver.service.ts","./projects/scimaps/src/app/pipes/safe.pipe.ts","./projects/scimaps/src/app/shared/components/drawer-header/drawer-header.component.ts","./projects/scimaps/src/app/shared/components/drawer-header/drawer-header.component.html","./projects/scimaps/src/app/shared/components/drawer-header/drawer-header.module.ts","./projects/scimaps/src/app/shared/components/video-tile/video-tile.component.ts","./projects/scimaps/src/app/shared/components/video-tile/video-tile.component.html","./projects/scimaps/src/app/shared/components/video-tile/video-tile.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Params, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { isHttp } from '../../constants/utils';\nimport { ContentService, toSlug } from '../../shared/services/content.service';\nimport { MakerVideo } from './maker-videos-resolver.service';\n\nexport const getVideoImageSource = (video: MakerVideo, directory = ''): string => {\n  let result = '';\n  if (video.image) {\n    result = video.image;\n    if (!isHttp(video.image)) {\n      result = `${directory}/${video.slug}/${video.image}`;\n    }\n  }\n  return result;\n};\n\nexport const toMakerVideo = (item: Params, directory = ''): MakerVideo => {\n  const result: MakerVideo = {\n    title: item.title,\n    short_description: item.short_description,\n    long_description: item.long_description,\n    videoLink: item.videoLink,\n    maker: item.maker,\n    image: item.image,\n    slug: toSlug(item.title)\n  };\n  result.image = getVideoImageSource(result, directory);\n  return result;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MakerVideoResolverService implements Resolve<MakerVideo> {\n\n  mdPath = '';\n  directory = 'assets/content/maker-videos';\n\n  constructor(private contentService: ContentService) { }\n\n  resolve(route: Params): Observable<MakerVideo> {\n    const { slug } = route.params;\n    this.mdPath = `maker-videos/${slug}`;\n    return this.getResult(this.mdPath);\n  }\n\n  getResult(mdPath: string): Observable<MakerVideo> {\n    return this.contentService.getContent<Params>(mdPath).pipe(\n      take(1),\n      map((item: Params) => toMakerVideo(item))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Params, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ContentService } from '../../shared/services/content.service';\nimport { toMakerVideo } from './maker-video-resolver.service';\n\nexport interface MakerVideo {\n  title: string;\n  short_description: string;\n  long_description: string;\n  slug: string;\n  videoLink: string;\n  maker: string;\n  image: string;\n}\n\nexport const getMakerVideo = (n: number): MakerVideo[] => {\n  const result: MakerVideo[] = [];\n  for (let i = 0; i < n; i++) {\n    result.push({\n      title: `title${i}`,\n      short_description: `short ${i}`,\n      long_description: `long ${i}`,\n      slug: `title${i}`,\n      videoLink: `link$ ${i}`,\n      maker: 'maker/readme',\n      image: `image.${i}.jpg`\n    });\n  }\n  return result;\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class MakerVideosResolverService implements Resolve<MakerVideo[]> {\n\n  directory = 'assets/content/maker-videos';\n  constructor(private content: ContentService) { }\n\n  resolve(route: Params): Observable<MakerVideo[]> {\n    const {videosCount} = route.data;\n    return this.content.getIndex<Params>('app-maker-videos').pipe(\n      map((items: Params[]) => {\n        if (videosCount && videosCount > 0) {\n          return items.slice(0, videosCount);\n        } else {\n          return items;\n        }\n      }),\n      map((makerVideos: Params[]) => {\n        return makerVideos.map(item => toMakerVideo(item, this.directory));\n      })\n    );\n  }\n}\n","import { NgModule, Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n  constructor(protected sanitizer: DomSanitizer) {}\n  transform(value: string, type: string): SafeResourceUrl {\n    if (type === 'resourceUrl') {\n      return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n    } else {\n      return '';\n    }\n  }\n}\n\n@NgModule({\n  declarations: [\n    SafePipe\n  ],\n  exports: [\n    SafePipe\n  ]\n})\nexport class SafePipeModule {}\n\n","import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'sci-drawer-header',\n  templateUrl: './drawer-header.component.html',\n  styleUrls: ['./drawer-header.component.scss']\n})\nexport class DrawerHeaderComponent {\n\n  @HostBinding('class') className = 'sci-drawer-header';\n\n  @Input() title = '';\n  @Input() backText = '';\n  @Output() backClick: EventEmitter<string> = new EventEmitter();\n\n}\n","<div class=\"drawer-header\">\n    <div class=\"back-button\" (click)=\"backClick.emit('back')\">\n        <mat-icon class=\"back-icon\">chevron_left</mat-icon>\n        <div class=\"back-text\">{{backText | uppercase}}</div>\n    </div>\n    <div class=\"title\">\n        <h3>\n            {{title}}\n        </h3>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DrawerHeaderComponent } from './drawer-header.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from '../../shared.module';\n\n\n\n@NgModule({\n  declarations: [DrawerHeaderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    SharedModule\n  ],\n  exports: [DrawerHeaderComponent]\n})\nexport class DrawerHeaderModule { }\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MakerVideo } from '../../../pages/maker-videos/maker-videos-resolver.service';\n\n@Component({\n  selector: 'sci-video-tile',\n  templateUrl: './video-tile.component.html',\n  styleUrls: ['./video-tile.component.scss']\n})\nexport class VideoTileComponent {\n\n  @Input() video!: MakerVideo;\n\n  constructor(private router: Router) { }\n\n  gotoVideo(): void {\n    if (this.video) {\n      this.router.navigate(['/', 'learning-center', 'maker-videos', this.video.slug]);\n    }\n  }\n}\n","<div class=\"container\" (click)=\"gotoVideo()\">\n  <div class=\"thumbnail\">\n    <img [src]=\"video?.image\" [alt]=\"video?.image\" />\n  </div>\n  <div class=\"title\">\n    <markdown>\n      {{ video?.short_description }}\n    </markdown>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { VideoTileComponent } from './video-tile.component';\nimport { MarkdownModule } from 'ngx-markdown';\n\n\n\n@NgModule({\n  declarations: [VideoTileComponent],\n  imports: [\n    CommonModule,\n    MarkdownModule\n  ],\n  exports: [VideoTileComponent]\n})\nexport class VideoTileModule { }\n"],"names":[],"sourceRoot":"webpack:///"}